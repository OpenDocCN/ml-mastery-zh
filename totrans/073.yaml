- en: How to Transform Images and Create Video with OpenCV
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 OpenCV 转换图像并创建视频
- en: 原文：[https://machinelearningmastery.com/how-to-transform-images-and-create-video-with-opencv/](https://machinelearningmastery.com/how-to-transform-images-and-create-video-with-opencv/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://machinelearningmastery.com/how-to-transform-images-and-create-video-with-opencv/](https://machinelearningmastery.com/how-to-transform-images-and-create-video-with-opencv/)
- en: When you work with OpenCV, you most often work with images. However, you may
    find it useful to create animation from multiple images. Chances are that showing
    images in rapid succession may give you different insight or it is easier to visualize
    your work by introducing a time axis.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用 OpenCV 时，你最常处理的是图像。然而，你可能会发现从多个图像创建动画是有用的。展示快速连续的图像可能会给你不同的见解，或者通过引入时间轴让你更容易可视化你的工作。
- en: 'In this post, you will see how to create a video clip in OpenCV. As an example,
    you will also learn some basic image manipulation techniques to create the images.
    In particular, you will learn:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，你将看到如何在 OpenCV 中创建视频剪辑。作为示例，你还将学习一些基本的图像处理技术来创建这些图像。特别是，你将学习：
- en: How to manipulate images as numpy array
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将图像作为 numpy 数组进行操作
- en: How to manipulate images using OpenCV functions
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用 OpenCV 函数操作图像
- en: How to create video file in OpenCV
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在 OpenCV 中创建视频文件
- en: '**Kick-start your project** with my book [Machine Learning in OpenCV](https://machinelearning.samcart.com/products/machine-learning-opencv/).
    It provides **self-study tutorials** with **working code**.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**快速启动你的项目**，请参阅我的书籍 [《OpenCV中的机器学习》](https://machinelearning.samcart.com/products/machine-learning-opencv/)。它提供了**自学教程**和**可用代码**。'
- en: Let’s get started.![](../Images/131a94182e4a8bf20db4d9fd07f527c8.png)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。![](../Images/131a94182e4a8bf20db4d9fd07f527c8.png)
- en: How to Transform Images and Create Video with OpenCV
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如何使用 OpenCV 转换图像并创建视频
- en: Photo by [KAL VISUALS](https://unsplash.com/photos/man-in-black-shirt-holding-video-camera-I-nd-LSCY04).
    Some rights reserved.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [KAL VISUALS](https://unsplash.com/photos/man-in-black-shirt-holding-video-camera-I-nd-LSCY04)
    提供。一些权利保留。
- en: Overview
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: 'This post is divided into two parts; they are:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本文分为两个部分；它们是：
- en: Ken Burns Effect
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ken Burns 效果
- en: Writing Video
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写视频
- en: Ken Burns Effect
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ken Burns 效果
- en: 'You are going to create a lot of images by following other posts. Maybe it
    is to visualize some progress of your machine learning project, or to show how
    a computer vision technique is manipulating your image. To make things simpler,
    you are going to do the simplest manipulation to an input image: cropping.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你将通过参考其他帖子创建大量图像。也许这是为了可视化你机器学习项目的一些进展，或者展示计算机视觉技术如何操作你的图像。为了简化问题，你将对输入图像进行最简单的操作：裁剪。
- en: 'The task in this post is to create **Ken Burns effect**. It is a panning and
    zooming technique named after the filmmaker Ken Burns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的任务是创建**Ken Burns 效果**。这是一种以电影制作人 Ken Burns 命名的平移和缩放技术：
- en: Instead of showing a large static photo on screen, the Ken Burns effect crops
    to a detail, then pans across the image.
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Ken Burns 效果不是在屏幕上显示一张大的静态照片，而是裁剪到一个细节，然后在图像上平移。
- en: — Wikipedia, “Ken Burns effect”
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: — 维基百科，“Ken Burns 效果”
- en: 'Let’s see how you can create the Ken Burns effect in Python code using OpenCV.
    We start with an image, for example the bird picture below that you can download
    from Wikipedia:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用 OpenCV 在 Python 代码中创建 Ken Burns 效果。我们从一张图像开始，例如下面这张可以从维基百科下载的鸟类图片：
- en: '[https://upload.wikimedia.org/wikipedia/commons/b/b7/Hooded_mountain_tanager_%28Buthraupis_montana_cucullata%29_Caldas.jpg](https://upload.wikimedia.org/wikipedia/commons/b/b7/Hooded_mountain_tanager_%28Buthraupis_montana_cucullata%29_Caldas.jpg)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://upload.wikimedia.org/wikipedia/commons/b/b7/Hooded_mountain_tanager_%28Buthraupis_montana_cucullata%29_Caldas.jpg](https://upload.wikimedia.org/wikipedia/commons/b/b7/Hooded_mountain_tanager_%28Buthraupis_montana_cucullata%29_Caldas.jpg)'
- en: '![](../Images/f165edf1ba488d20835a3b5d9463f747.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f165edf1ba488d20835a3b5d9463f747.png)'
- en: A picture of *Buthraupis montana cucullata*. Photo by Charles J. Sharp. (CC-BY-SA)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一张*Buthraupis montana cucullata*的图片。照片由 Charles J. Sharp 提供。（CC-BY-SA）
- en: 'This picture is in 4563×3042 pixels. Opening this picture with OpenCV is easy:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图片的分辨率是 4563×3042 像素。用 OpenCV 打开这张图片很简单：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The image read by OpenCV, `img`, is indeed a numpy array of shape (3042, 4563,
    3) and in the data type `uint8` (8-bit unsigned integer) for it is a colored image
    which each pixel is represented as BGR values between 0 and 255.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: OpenCV 读取的图像 `img` 实际上是一个形状为 (3042, 4563, 3) 的 numpy 数组，数据类型为 `uint8`（8 位无符号整数），因为这是一个彩色图像，每个像素以
    BGR 值在 0 到 255 之间表示。
- en: 'Ken Burns effect is to zoom and pan. Each frame in the video is a crop of the
    original image (and then zoom to fill the screen). To crop the image given a numpy
    array is easy, since numpy already provided the slicing syntax for you:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Ken Burns 效果是缩放和平移。视频中的每一帧都是原始图像的裁剪（然后放大以填充屏幕）。给定一个 numpy 数组来裁剪图像是很简单的，因为 numpy
    已经为你提供了切片语法：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The image is a three-dimensional numpy array. The first two dimensions are for
    height and width, respectively (same as how to set a coordinate for a matrix).
    Hence you can use the numpy slicing syntax to take pixels $y_0$ to $y_1$ in the
    vertical direction and pixels $x_0$ to $x_1$ in the horizontal direction (remember
    that in matrix, coordinates are numbered from top to bottom and from left to right).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图像是一个三维 numpy 数组。前两个维度分别表示高度和宽度（与设置矩阵坐标的方式相同）。因此，你可以使用 numpy 切片语法在垂直方向上获取像素
    $y_0$ 到 $y_1$，在水平方向上获取像素 $x_0$ 到 $x_1$（请记住，在矩阵中，坐标是从上到下和从左到右编号的）。
- en: Cropping a picture means to take a picture of dimension $W\times H$ into a smaller
    dimension $W’\times H’$. In order to make a video, you want to create frames of
    a fixed dimension. The cropped dimension $W’\times H’$ would need to be resized.
    Moreover, to avoid distortion, the cropped image also needs to be at a predefined
    aspect ratio.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 裁剪一张图片意味着将尺寸为 $W\times H$ 的图片裁剪成一个更小的尺寸 $W’\times H’$。为了制作视频，你需要创建固定尺寸的帧。裁剪后的尺寸
    $W’\times H’$ 需要调整大小。此外，为了避免失真，裁剪后的图像还需要保持预定义的长宽比。
- en: 'To resize an image, you can define a new numpy array, then calculate and fill
    in the pixel values one by one. There are many ways to calculate pixel value,
    such as using linear interpolation or simply copy over the nearest pixel. If you
    try to implement the resize operation, you will find it not hard but still quite
    cumbersome. Hence the easier way is to use OpenCV’s native function, such as the
    following:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要调整图像大小，你可以定义一个新的 numpy 数组，然后逐一计算并填充像素值。有很多方法可以计算像素值，例如使用线性插值或简单地复制最近的像素。如果你尝试实现调整大小操作，你会发现它并不困难，但仍然相当繁琐。因此，更简单的方法是使用
    OpenCV 的原生函数，如下所示：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The function `cv2.resize()` takes an image and the target dimension as a tuple
    of (width, height) in pixel size and returns a new numpy array. You can specify
    the algorithm for resizing. The above is using linear interpolation and it looks
    good in most cases.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 `cv2.resize()` 接受一张图像和目标尺寸（以像素宽度和高度的元组形式），并返回一个新的 numpy 数组。你可以指定调整大小的算法。上面的代码使用线性插值，在大多数情况下效果很好。
- en: 'These are basically all ways you can manipulate an image in OpenCV, namely:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这些基本上是你可以在 OpenCV 中操作图像的所有方法，即：
- en: Manipulate the numpy array directly. This works well for simple tasks where
    you want to work at the pixel level
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 直接操作 numpy 数组。这对于你想在像素级别进行操作的简单任务效果很好。
- en: Using OpenCV functions. This is more suitable for complex tasks where you need
    to consider the entire image or it is too inefficient to manipulate each pixel.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 OpenCV 函数。这更适用于复杂任务，在这些任务中，你需要考虑整个图像，或者操作每个像素效率过低。
- en: 'With these, you can build your Ken Burns animation. The flow is as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 利用这些，你可以创建你的 Ken Burns 动画。流程如下：
- en: Given an image (preferably a high-resolution one), you want to define pan by
    specifying the starting and ending focus coordinates. You also want to define
    the starting and ending zoom ratio.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给定一张图像（最好是高分辨率的），你需要通过指定起始和结束的焦点坐标来定义平移。你还需要定义起始和结束的缩放比例。
- en: You have a predefined video duration and the FPS (frame per second). The total
    number of frames in the video is the duration multiplied by the FPS.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你有一个预定义的视频时长和帧率（FPS）。视频中的总帧数是时长乘以 FPS。
- en: For each frame, calculate the crop coordinates. Then resize the cropped image
    to the target resolution of the video
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每一帧，计算裁剪坐标。然后将裁剪后的图像调整到视频的目标分辨率。
- en: With all the frames prepared, you write to the video file.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备好所有帧后，你可以写入视频文件。
- en: 'Let’s start with the constants: Assume we are going to create a two-second
    720p video (resolution 1280×720) at 25 FPS (which is quite low but visually acceptable).
    The pan will start at the center at 40% from left and 60% from top of the image,
    and end at the center at 50% from left and 50% from top of the image. The zoom
    will be start from 70% of the original image, then zoom out to 100%.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从常量开始：假设我们要创建一个两秒钟的 720p 视频（分辨率为 1280×720），以 25 FPS 制作（这虽然较低，但视觉效果可接受）。平移将从图像的左侧
    40% 和顶部 60% 处的中心开始，并在图像的左侧 50% 和顶部 50% 处的中心结束。缩放将从原始图像的 70% 开始，然后缩放到 100%。
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You are going to crop the image a lot of times to create frames (precisely,
    there are 2×25=50 frames). Therefore it is beneficial to create a function for
    cropping:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要多次裁剪图像以创建帧（准确地说，有 2×25=50 帧）。因此，创建一个裁剪函数是有益的：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This cropping function takes an image, the tentative center position in pixel
    coordinate, and the width and height in number of pixels. The cropping will ensure
    it will not start beyond the image border, hence the two `max()` functions are
    used. Cropping is done using numpy slicing syntax.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这个裁剪函数接受一个图像、像素坐标中的初步中心位置，以及宽度和高度（以像素为单位）。裁剪会确保不会超出图像边界，因此使用了两个 `max()` 函数。裁剪是通过
    numpy 切片语法完成的。
- en: If you consider that the current point of time is at $\alpha$% of the entire
    duration, you can use affine transform to calculate the exact level of zoom and
    the position of pan. In terms of the relative position of the pan center (in terms
    of percentage of original width and height), the affine transform gives
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你认为当前时间点在整个持续时间的 $\alpha$% 位置，你可以使用仿射变换来计算确切的缩放级别和全景的位置。就全景中心的相对位置（以原始宽度和高度的百分比计算）而言，仿射变换给出
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: where `alpha` is between 0 and 1\. Similarly, the zoom level is
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 `alpha` 在 0 和 1 之间。同样，缩放级别为
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Given the original image size and the scale, you can calculate the size of
    cropped image by multiplication. But since the aspect ratio of the image may not
    be the same as the video, you should adjust the cropped dimension to fit the video
    aspect ratio. Assume the image numpy array is `img`, and the zoom level as `scale`
    calculated above, the cropped size can be calculated as:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 给定原始图像的大小和缩放比例，你可以通过乘法计算裁剪图像的大小。但由于图像的纵横比可能与视频不同，你应该调整裁剪尺寸以适应视频的纵横比。假设图像的 numpy
    数组是 `img`，而上述计算的缩放级别是 `scale`，裁剪后的大小可以计算为：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The above is to compare the aspect ratio (width divided by height) between the
    image and video, and the zoom level is used for the more limited edge and calculates
    the other edge based on the target aspect ratio.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 上述是为了比较图像和视频之间的纵横比（宽度除以高度），并使用缩放级别来计算更有限的边缘，并根据目标纵横比计算另一边缘。
- en: 'Once you know how many frames you needed, you can use a for-loop to create
    each frame with a different affine parameter `alpha`, which can be obtained using
    a numpy function `linspace()`. The complete code is as follows:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你知道需要多少帧，你可以使用 for 循环来创建每一帧，每一帧具有不同的仿射参数 `alpha`，这些参数可以通过 numpy 函数 `linspace()`
    获得。完整代码如下：
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The last few lines is how you use OpenCV to write a video. You create a `VideoWriter`
    object with the FPS and resolution specified. Then you write the frames one by
    one, and release the object to close the written file.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的几行是如何使用 OpenCV 写入视频。你创建一个具有指定 FPS 和分辨率的 `VideoWriter` 对象。然后你逐帧写入视频，最后释放对象以关闭写入的文件。
- en: 'The created video is one like the [this](https://machinelearningmastery.com/wp-content/uploads/2023/10/output.mp4).
    A preview is as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的视频类似于 [这个](https://machinelearningmastery.com/wp-content/uploads/2023/10/output.mp4)。预览如下：
- en: <https://machinelearningmastery.com/wp-content/uploads/2023/10/output.webm?_=1>
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: <https://machinelearningmastery.com/wp-content/uploads/2023/10/output.webm?_=1>
- en: '[https://machinelearningmastery.com/wp-content/uploads/2023/10/output.webm](https://machinelearningmastery.com/wp-content/uploads/2023/10/output.webm)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://machinelearningmastery.com/wp-content/uploads/2023/10/output.webm](https://machinelearningmastery.com/wp-content/uploads/2023/10/output.webm)'
- en: Preview of the created video. Viewing this requires a supported browser.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 创建视频的预览。查看此内容需要支持的浏览器。
- en: Writing Video
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 写入视频
- en: 'From the example in the previous section, you saw how we create a `VideoWriter`
    object:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 从上一节的示例中，你可以看到我们如何创建一个 `VideoWriter` 对象：
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Unlike how you may write an image file (such as JPEG or PNG), the format of
    the video that OpenCV created is not inferred from the filename. It is the second
    parameter to specify the video format, namely, the **FourCC**, which is a code
    of four characters. You can find the FourCC code and the corresponding video format
    from the list at the following URL:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 与图像文件（如 JPEG 或 PNG）的写入方式不同，OpenCV 创建的视频格式不是从文件名中推断的。它是第二个参数来指定视频格式，即 **FourCC**，这是一个由四个字符组成的代码。你可以从以下网址的列表中找到
    FourCC 代码和对应的视频格式：
- en: '[https://fourcc.org/codecs.php](https://fourcc.org/codecs.php)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://fourcc.org/codecs.php](https://fourcc.org/codecs.php)'
- en: 'However, not all FourCC code can be used. It is because OpenCV create the video
    using the FFmpeg tool. You can find the list of supported video format using the
    command:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，并非所有 FourCC 代码都可以使用。这是因为 OpenCV 使用 FFmpeg 工具来创建视频。你可以使用以下命令找到支持的视频格式列表：
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Be sure that the `ffmpeg` command is same as what OpenCV used. Also note that,
    the output of the above command only tells you what format ffmpeg supported, not
    the corresponding FourCC code. You need to lookup the code elsewhere, such as
    from the abovementioned URL.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 确保`ffmpeg`命令与OpenCV使用的相同。另外请注意，上述命令的输出仅告诉你ffmpeg支持的格式，而不是相应的FourCC代码。你需要在其他地方查找代码，例如从上述URL中。
- en: 'To check if you can use a particular FourCC code, you must try it out and see
    if OpenCV raise an exception:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查是否可以使用特定的FourCC代码，你必须试用并查看OpenCV是否抛出异常：
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Want to Get Started With Machine Learning with OpenCV?
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 想要开始使用OpenCV进行机器学习吗？
- en: Take my free email crash course now (with sample code).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在就来参加我的免费电子邮件速成课程（包含示例代码）。
- en: Click to sign-up and also get a free PDF Ebook version of the course.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 点击注册，还可以获得课程的免费PDF电子书版本。
- en: Summary
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this post, you learned how to create a video in OpenCV. The video created
    is built from a sequence of frames (i.e., no audio). Each frame is an image of
    a fixed size. As an example, you learned how to apply the Ken Burns effect to
    a picture, which in particular, you applied:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，你学习了如何在OpenCV中创建视频。创建的视频由一系列帧（即无音频）组成。每一帧都是固定大小的图像。例如，你学习了如何对图片应用Ken
    Burns效果，其中你特别应用了：
- en: The technique of cropping an image using numpy slicing syntax
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用numpy切片语法裁剪图像的技巧
- en: The technique of resizing an image using OpenCV functions
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用OpenCV函数调整图像大小的技巧
- en: Using affine transform to calculate the parameters of zoom and pan, and create
    frames of the video
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用仿射变换来计算缩放和平移的参数，并创建视频帧。
- en: And finally, you write the frames into a video file using the `VideoWriter`
    object in OpenCV.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你使用`VideoWriter`对象将帧写入视频文件中。
