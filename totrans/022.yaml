- en: The Power of Pipelines
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管道的力量
- en: 原文：[https://machinelearningmastery.com/the-power-of-pipelines/](https://machinelearningmastery.com/the-power-of-pipelines/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://machinelearningmastery.com/the-power-of-pipelines/](https://machinelearningmastery.com/the-power-of-pipelines/)
- en: Machine learning projects often require the execution of a sequence of data
    preprocessing steps followed by a learning algorithm. Managing these steps individually
    can be cumbersome and error-prone. This is where `sklearn` pipelines come into
    play. This post will explore how pipelines automate critical aspects of machine
    learning workflows, such as data preprocessing, feature engineering, and the incorporation
    of machine learning algorithms.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习项目通常需要执行一系列的数据预处理步骤，然后是学习算法。单独管理这些步骤可能繁琐且容易出错。这时`sklearn`管道发挥作用。这篇文章将探讨管道如何自动化机器学习工作流的关键方面，如数据预处理、特征工程和机器学习算法的整合。
- en: Let’s get started.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: '![](../Images/6b3185917d2454cd5c46bae0270eab6c.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6b3185917d2454cd5c46bae0270eab6c.png)'
- en: The Power of Pipelines
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 管道的力量
- en: Photo by [Quinten de Graaf](https://unsplash.com/photos/metal-pipe-between-trees-at-daytime-L4gN0aeaPY4).
    Some rights reserved.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[Quinten de Graaf](https://unsplash.com/photos/metal-pipe-between-trees-at-daytime-L4gN0aeaPY4)拍摄。保留所有权利。
- en: Overview
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: 'This post is divided into three parts; they are:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章分为三部分；它们是：
- en: What is a Pipeline?
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是管道？
- en: Elevating Our Model with Advanced Transformations
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过高级转换提升我们的模型
- en: Handling Missing Data with Imputation in Pipelines
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在管道中使用插补处理缺失数据
- en: What is a Pipeline?
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是管道？
- en: A pipeline is used to automate and encapsulate the sequence of various transformation
    steps and the final estimator into one object. By defining a pipeline, you ensure
    that the same sequence of steps is applied to both the training and the testing
    data, enhancing the reproducibility and reliability of your model.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 管道用于自动化和封装各种转换步骤和最终估计器的序列为一个对象。通过定义管道，你确保相同的步骤序列应用于训练数据和测试数据，从而提高模型的可重复性和可靠性。
- en: 'Let’s demonstrate the implementation of a pipeline and compare it with a traditional
    approach without a pipeline. Consider a simple scenario where we want to predict
    house prices based on the quality of a house, using the ‘OverallQual’ feature
    from the Ames Housing dataset. Here’s a side-by-side comparison of performing
    5-fold cross-validation with and without using a pipeline:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们展示管道的实现，并将其与没有使用管道的传统方法进行比较。考虑一个简单的场景，我们想基于房屋的质量来预测房价，使用‘OverallQual’特征来自Ames
    Housing数据集。这里是一个并排比较，展示使用和不使用管道的5折交叉验证：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Both methods yield exactly the same results:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 两种方法产生完全相同的结果：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here is a visual to illustrate this basic pipeline.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个可视化图示例，以说明这个基本管道。
- en: '[![](../Images/5b031830d67ae48fbefab9e52a8fe4fb.png)](https://machinelearningmastery.com/the-power-of-pipelines/screenshot-2024-04-29-at-14-13-12/)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/5b031830d67ae48fbefab9e52a8fe4fb.png)](https://machinelearningmastery.com/the-power-of-pipelines/screenshot-2024-04-29-at-14-13-12/)'
- en: This example uses a straightforward case with only one feature. Still, as models
    grow more complex, pipelines can manage multiple preprocessing steps, such as
    scaling, encoding, and dimensionality reduction, before applying the model.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子使用了一个简单的案例，仅包含一个特征。然而，随着模型的复杂性增加，管道可以管理多个预处理步骤，如缩放、编码和降维，然后再应用模型。
- en: 'Building on our foundational understanding of sklearn pipelines, let’s expand
    our scenario to include feature engineering — an essential step in improving model
    performance. Feature engineering involves creating new features from the existing
    data that might have a stronger relationship with the target variable. In our
    case, we suspect that the interaction between the quality of a house and its living
    area could be a better predictor of the house price than either feature alone.
    Here’s another side-by-side comparison of performing 5-fold cross-validation with
    and without using a pipeline:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们对sklearn管道的基础理解上，让我们扩展我们的场景，包括特征工程——这是提高模型性能的关键步骤。特征工程涉及从现有数据中创建新特征，这些特征可能与目标变量有更强的关系。在我们的案例中，我们怀疑房屋质量与生活面积之间的交互可能比单独的特征更好地预测房价。这里是一个并排比较，展示使用和不使用管道的5折交叉验证：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Both methods produce the same results again:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 两种方法再次产生相同的结果：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This output indicates that using a pipeline, we encapsulate feature engineering
    within our model training process, making it an integral part of the cross-validation.
    With pipelines, each cross-validation fold will now generate the ‘Quality Weighted
    Area’ feature within the pipeline, ensuring that our feature engineering step
    is validated correctly, avoiding data leakage and, thus, producing a more reliable
    estimate of model performance.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这一结果表明，通过使用管道，我们将特征工程封装在模型训练过程中，使其成为交叉验证的一个组成部分。使用管道时，每次交叉验证折叠将生成‘Quality Weighted
    Area’特征，确保我们的特征工程步骤得到正确验证，避免数据泄漏，从而产生更可靠的模型性能估计。
- en: Here is a visual to illustrate how we used the `FunctionTransformer` as part
    of our preprocessing step in this pipeline.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个可视化图示，展示了我们如何在这个管道的预处理步骤中使用`FunctionTransformer`。
- en: '[![](../Images/e460ddab4bf29095440249d8725d5981.png)](https://machinelearningmastery.com/the-power-of-pipelines/screenshot-2024-04-29-at-14-23-54/)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/e460ddab4bf29095440249d8725d5981.png)](https://machinelearningmastery.com/the-power-of-pipelines/screenshot-2024-04-29-at-14-23-54/)'
- en: The pipelines above ensure that our feature engineering and preprocessing efforts
    accurately reflect the model’s performance metrics. As we continue, we’ll venture
    into more advanced territory, showcasing the robustness of pipelines when dealing
    with various preprocessing tasks and different types of variables.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 上述管道确保了我们的特征工程和预处理工作准确反映了模型的性能指标。随着我们继续前进，我们将进入更高级的领域，展示在处理各种预处理任务和不同类型的变量时，管道的鲁棒性。
- en: Elevating Our Model with Advanced Transformations
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用高级变换提升我们的模型
- en: Our next example incorporates a cubic transformation, engineered features, and
    categorical encoding and includes raw features without any transformation. This
    exemplifies how a pipeline can handle a mix of data types and transformations,
    streamlining the preprocessing and modeling steps into a cohesive process.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一个示例包含了立方变换、特征工程和类别编码，并且包括了未经任何变换的原始特征。这展示了一个管道如何处理各种数据类型和变换，将预处理和建模步骤流畅地整合成一个统一的过程。
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Feature engineering is an art that often requires a creative touch. By applying
    a cubic transformation to the ‘OverallQual’ feature, we hypothesize that the non-linear
    relationship between quality and price could be better captured. Additionally,
    we engineer a ‘QualityArea’ feature, which we believe might interact more significantly
    with the sale price than the individual features alone. We also cater to the categorical
    features ‘Neighborhood’, ‘ExterQual’, and ‘KitchenQual’ by employing one-hot encoding,
    a crucial step in preparing textual data for modeling. We pass it directly into
    the model to ensure that the valuable temporal information from ‘YearBuilt’ is
    not transformed unnecessarily. The above pipeline yields the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 特征工程是一门艺术，通常需要创造性的触感。通过对‘OverallQual’特征应用立方变换，我们假设质量与价格之间的非线性关系可能会被更好地捕捉。此外，我们还工程化了一个‘QualityArea’特征，我们认为它可能会比单独的特征更显著地与销售价格互动。我们还通过使用独热编码来处理类别特征‘Neighborhood’、‘ExterQual’和‘KitchenQual’，这是准备文本数据用于建模的关键步骤。我们直接将其传递给模型，以确保‘YearBuilt’中的有价值的时间信息不会被不必要地转化。上述管道产生了以下结果：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: With an impressive mean CV R² score of 0.850, this pipeline demonstrates the
    substantial impact of thoughtful feature engineering and preprocessing on model
    performance. It highlights pipeline efficiency and scalability and underscores
    their strategic importance in building robust predictive models. Here is a visual
    to illustrate this pipeline.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以令人印象深刻的平均交叉验证 R² 分数 0.850，这个管道展示了深思熟虑的特征工程和预处理对模型性能的显著影响。它突显了管道的效率和可扩展性，并强调了在构建强大的预测模型时其战略重要性。这里有一个可视化图示来说明这个管道。
- en: '[![](../Images/09a80c5c90f1d3c48d356351dbd1ae73.png)](https://machinelearningmastery.com/the-power-of-pipelines/screenshot-2024-04-29-at-14-38-48/)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/09a80c5c90f1d3c48d356351dbd1ae73.png)](https://machinelearningmastery.com/the-power-of-pipelines/screenshot-2024-04-29-at-14-38-48/)'
- en: The true advantage of this methodology lies in its unified workflow. By elegantly
    combining feature engineering, transformations, and model evaluation into a single,
    coherent process, pipelines greatly enhance the accuracy and validity of our predictive
    models. This advanced example reinforces the concept that, with pipelines, complexity
    does not come at the cost of clarity or performance in machine learning workflows.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的真正优势在于其统一的工作流。通过将特征工程、变换和模型评估优雅地结合到一个连贯的过程中，管道大大提高了我们预测模型的准确性和有效性。这个高级示例强调了一个概念：使用管道时，复杂性不会以牺牲清晰性或性能为代价。
- en: Handling Missing Data with Imputation in Pipelines
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在管道中使用插补处理缺失数据
- en: The reality of most datasets, especially large ones, is that they often contain
    missing values. Neglecting to handle these missing values can lead to significant
    biases or errors in your predictive models. In this section, we will demonstrate
    how to seamlessly integrate data imputation into our pipeline to ensure that our
    linear regression model is robust against such issues.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现实中的大多数数据集，尤其是大型数据集，通常包含缺失值。不处理这些缺失值可能导致预测模型中出现显著的偏差或错误。在这一部分，我们将演示如何将数据插补无缝集成到我们的管道中，以确保我们的线性回归模型在面对这些问题时具有鲁棒性。
- en: In a previous post, we delved into the depths of missing data, [manually imputing
    missing values](https://machinelearningmastery.com/classifying_variables/) in
    the Ames dataset without using pipelines. Building on that foundation, we now
    introduce how to streamline and automate imputation within our pipeline framework,
    providing a more efficient and error-proof approach suitable even for those new
    to the concept.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的帖子中，我们深入探讨了缺失数据，[手动插补缺失值](https://machinelearningmastery.com/classifying_variables/)在Ames数据集中而未使用管道。在此基础上，我们现在介绍如何在我们的管道框架中简化和自动化插补，为新手提供更高效且无错误的处理方法。
- en: We have chosen to use a `SimpleImputer` to handle the missing values for the
    ‘BsmtQual’ (Basement Quality) feature, a categorical variable in our dataset.
    The `SimpleImputer` will replace missing values with the constant ‘None’, indicating
    the absence of a basement. Post-imputation, we employ a `OneHotEncoder` to convert
    this categorical data into a numerical format suitable for our linear model. By
    nesting this imputation within our pipeline, we ensure that the imputation strategy
    is correctly applied during both the training and testing phases, thus preventing
    any data leakage and maintaining the integrity of our model evaluation through
    cross-validation.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择使用`SimpleImputer`来处理数据集中‘BsmtQual’（地下室质量）特征的缺失值。`SimpleImputer`将用常数‘None’替代缺失值，以表示没有地下室。插补后，我们使用`OneHotEncoder`将这些分类数据转换为适合线性模型的数值格式。通过将此插补嵌入到我们的管道中，我们确保插补策略在训练和测试阶段都得到正确应用，从而防止数据泄漏，并通过交叉验证维护模型评估的完整性。
- en: 'Here’s how we integrate this into our pipeline setup:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我们如何将其集成到管道设置中的：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The use of `SimpleImputer` in our pipeline helps efficiently handle missing
    data. When coupled with the rest of the preprocessing steps and the linear regression
    model, the complete setup allows us to evaluate the true impact of our preprocessing
    choices on model performance.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的管道中使用`SimpleImputer`有助于有效处理缺失数据。当它与其他预处理步骤和线性回归模型结合使用时，完整的设置使我们能够评估预处理选择对模型性能的真实影响。
- en: '[PRE7]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here is a visual of our pipeline which includes missing data imputation:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个包含缺失数据插补的管道示意图：
- en: '[![](../Images/26b53385afcc1efcd29a075e6db30c2f.png)](https://machinelearningmastery.com/the-power-of-pipelines/screenshot-2024-04-30-at-12-36-48/)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/26b53385afcc1efcd29a075e6db30c2f.png)](https://machinelearningmastery.com/the-power-of-pipelines/screenshot-2024-04-30-at-12-36-48/)'
- en: This integration showcases the flexibility of sklearn pipelines and emphasizes
    how essential preprocessing steps, like imputation, are seamlessly included in
    the machine learning workflow, enhancing the model’s reliability and accuracy.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这种集成展示了`sklearn`管道的灵活性，并强调了诸如插补等预处理步骤在机器学习工作流中如何无缝地融入，从而提高模型的可靠性和准确性。
- en: '**Further****Reading**'
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**进一步阅读**'
- en: APIs
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: APIs
- en: '[sklearn.pipeline.Pipeline](https://scikit-learn.org/stable/modules/generated/sklearn.pipeline.Pipeline.html)
    API'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sklearn.pipeline.Pipeline](https://scikit-learn.org/stable/modules/generated/sklearn.pipeline.Pipeline.html)
    API'
- en: Tutorials
  id: totrans-51
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 教程
- en: '[Streamline Your Machine Learning Workflow with Scikit-learn Pipelines](https://www.kdnuggets.com/streamline-your-machine-learning-workflow-with-scikit-learn-pipelines)
    by Abid Ali Awan'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Scikit-learn 管道简化你的机器学习工作流程](https://www.kdnuggets.com/streamline-your-machine-learning-workflow-with-scikit-learn-pipelines)
    作者：Abid Ali Awan'
- en: '**Ames Housing Dataset & Data Dictionary**'
  id: totrans-53
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**Ames 房屋数据集 & 数据字典**'
- en: '[Ames Dataset](https://raw.githubusercontent.com/Padre-Media/dataset/main/Ames.csv)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Ames 数据集](https://raw.githubusercontent.com/Padre-Media/dataset/main/Ames.csv)'
- en: '[Ames Data Dictionary](https://github.com/Padre-Media/dataset/blob/main/Ames%20Data%20Dictionary.txt)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Ames 数据字典](https://github.com/Padre-Media/dataset/blob/main/Ames%20Data%20Dictionary.txt)'
- en: '**Summary**'
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**总结**'
- en: In this post, we explored the utilization of sklearn pipelines, culminating
    in the sophisticated integration of data imputation for handling missing values
    within a linear regression context. We illustrated the seamless automation of
    data preprocessing steps, feature engineering, and the inclusion of advanced transformations
    to refine our model’s performance. The methodology highlighted in this post is
    not only about maintaining the workflow’s efficiency but also about ensuring the
    consistency and accuracy of the predictive models we aspire to build.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们探讨了 sklearn 管道的应用，最终实现了在线性回归背景下处理缺失值的数据插补的复杂集成。我们展示了数据预处理步骤、特征工程以及高级转换的无缝自动化，以完善模型的性能。这篇文章中强调的方法不仅关乎保持工作流程的效率，还关乎确保我们希望构建的预测模型的一致性和准确性。
- en: 'Specifically, you learned:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，你学到了：
- en: The foundational concept of sklearn pipelines and how they encapsulate a sequence
    of data transformations and a final estimator.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sklearn 管道的基础概念以及它们如何封装一系列数据转换和最终的估计器。
- en: When integrated into pipelines, feature engineering can enhance model performance
    by creating new, more predictive features.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当集成到管道中时，特征工程可以通过创建新的、更具预测性的特征来增强模型性能。
- en: The strategic use of `SimpleImputer` within pipelines to handle missing data
    effectively, preventing data leakage and improving model reliability.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在管道中战略性地使用`SimpleImputer`来有效处理缺失数据，防止数据泄漏并提高模型的可靠性。
- en: Do you have any questions? Please ask your questions in the comments below,
    and I will do my best to answer.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有任何问题，请在下面的评论中提问，我会尽力回答。
