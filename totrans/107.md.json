["```py\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\n\ndef f(x,y):\n    \"Objective function\"\n    return (x-3.14)**2 + (y-2.72)**2 + np.sin(3*x+1.41) + np.sin(4*y-1.73)\n\n# Compute and plot the function in 3D within [0,5]x[0,5]\nx, y = np.array(np.meshgrid(np.linspace(0,5,100), np.linspace(0,5,100)))\nz = f(x, y)\n\n# Find the global minimum\nx_min = x.ravel()[z.argmin()]\ny_min = y.ravel()[z.argmin()]\n\n# Hyper-parameter of the algorithm\nc1 = c2 = 0.1\nw = 0.8\n\n# Create particles\nn_particles = 20\nnp.random.seed(100)\nX = np.random.rand(2, n_particles) * 5\nV = np.random.randn(2, n_particles) * 0.1\n\n# Initialize data\npbest = X\npbest_obj = f(X[0], X[1])\ngbest = pbest[:, pbest_obj.argmin()]\ngbest_obj = pbest_obj.min()\n\ndef update():\n    \"Function to do one iteration of particle swarm optimization\"\n    global V, X, pbest, pbest_obj, gbest, gbest_obj\n    # Update params\n    r1, r2 = np.random.rand(2)\n    V = w * V + c1*r1*(pbest - X) + c2*r2*(gbest.reshape(-1,1)-X)\n    X = X + V\n    obj = f(X[0], X[1])\n    pbest[:, (pbest_obj >= obj)] = X[:, (pbest_obj >= obj)]\n    pbest_obj = np.array([pbest_obj, obj]).min(axis=0)\n    gbest = pbest[:, pbest_obj.argmin()]\n    gbest_obj = pbest_obj.min()\n\n# Set up base figure: The contour map\nfig, ax = plt.subplots(figsize=(8,6))\nfig.set_tight_layout(True)\nimg = ax.imshow(z, extent=[0, 5, 0, 5], origin='lower', cmap='viridis', alpha=0.5)\nfig.colorbar(img, ax=ax)\nax.plot([x_min], [y_min], marker='x', markersize=5, color=\"white\")\ncontours = ax.contour(x, y, z, 10, colors='black', alpha=0.4)\nax.clabel(contours, inline=True, fontsize=8, fmt=\"%.0f\")\npbest_plot = ax.scatter(pbest[0], pbest[1], marker='o', color='black', alpha=0.5)\np_plot = ax.scatter(X[0], X[1], marker='o', color='blue', alpha=0.5)\np_arrow = ax.quiver(X[0], X[1], V[0], V[1], color='blue', width=0.005, angles='xy', scale_units='xy', scale=1)\ngbest_plot = plt.scatter([gbest[0]], [gbest[1]], marker='*', s=100, color='black', alpha=0.4)\nax.set_xlim([0,5])\nax.set_ylim([0,5])\n\ndef animate(i):\n    \"Steps of PSO: algorithm update and show in plot\"\n    title = 'Iteration {:02d}'.format(i)\n    # Update params\n    update()\n    # Set picture\n    ax.set_title(title)\n    pbest_plot.set_offsets(pbest.T)\n    p_plot.set_offsets(X.T)\n    p_arrow.set_offsets(X.T)\n    p_arrow.set_UVC(V[0], V[1])\n    gbest_plot.set_offsets(gbest.reshape(1,-1))\n    return ax, pbest_plot, p_plot, p_arrow, gbest_plot\n\nanim = FuncAnimation(fig, animate, frames=list(range(1,50)), interval=500, blit=False, repeat=True)\nanim.save(\"PSO.gif\", dpi=120, writer=\"imagemagick\")\n\nprint(\"PSO found best solution at f({})={}\".format(gbest, gbest_obj))\nprint(\"Global optimal at f({})={}\".format([x_min,y_min], f(x_min,y_min)))\n```", "```py\npython pso.py\n```", "```py\npython -m pdb pso.py\n```", "```py\n> /Users/mlm/pso.py(1)<module>()\n-> import numpy as np\n(Pdb)\n```", "```py\n> /Users/mlm/pso.py(1)<module>()\n-> import numpy as np\n(Pdb) h\n\nDocumented commands (type help <topic>):\n========================================\nEOF    c          d        h         list      q        rv       undisplay\na      cl         debug    help      ll        quit     s        unt\nalias  clear      disable  ignore    longlist  r        source   until\nargs   commands   display  interact  n         restart  step     up\nb      condition  down     j         next      return   tbreak   w\nbreak  cont       enable   jump      p         retval   u        whatis\nbt     continue   exit     l         pp        run      unalias  where\n\nMiscellaneous help topics:\n==========================\nexec  pdb\n\n(Pdb)\n```", "```py\n> /Users/mlm/pso.py(1)<module>()\n-> import numpy as np\n(Pdb) n\n> /Users/mlm/pso.py(2)<module>()\n-> import matplotlib.pyplot as plt\n(Pdb) n\n> /Users/mlm/pso.py(3)<module>()\n-> from matplotlib.animation import FuncAnimation\n(Pdb) n\n> /Users/mlm/pso.py(5)<module>()\n-> def f(x,y):\n(Pdb) n\n> /Users/mlm/pso.py(10)<module>()\n-> x, y = np.array(np.meshgrid(np.linspace(0,5,100), np.linspace(0,5,100)))\n(Pdb) n\n> /Users/mlm/pso.py(11)<module>()\n-> z = f(x, y)\n(Pdb) s\n--Call--\n> /Users/mlm/pso.py(5)f()\n-> def f(x,y):\n(Pdb) s\n> /Users/mlm/pso.py(7)f()\n-> return (x-3.14)**2 + (y-2.72)**2 + np.sin(3*x+1.41) + np.sin(4*y-1.73)\n(Pdb) s\n--Return--\n> /Users/mlm/pso.py(7)f()->array([[17.25... 7.46457344]])\n-> return (x-3.14)**2 + (y-2.72)**2 + np.sin(3*x+1.41) + np.sin(4*y-1.73)\n(Pdb) s\n> /Users/mlm/pso.py(14)<module>()\n-> x_min = x.ravel()[z.argmin()]\n(Pdb)\n```", "```py\n> /Users/mlm/pso.py(1)<module>()\n-> import numpy as np\n(Pdb) until 11\n> /Users/mlm/pso.py(11)<module>()\n-> z = f(x, y)\n(Pdb) s\n--Call--\n> /Users/mlm/pso.py(5)f()\n-> def f(x,y):\n(Pdb) s\n> /Users/mlm/pso.py(7)f()\n-> return (x-3.14)**2 + (y-2.72)**2 + np.sin(3*x+1.41) + np.sin(4*y-1.73)\n(Pdb) s\n--Return--\n> /Users/mlm/pso.py(7)f()->array([[17.25... 7.46457344]])\n-> return (x-3.14)**2 + (y-2.72)**2 + np.sin(3*x+1.41) + np.sin(4*y-1.73)\n(Pdb) s\n> /Users/mlm/pso.py(14)<module>()\n-> x_min = x.ravel()[z.argmin()]\n(Pdb)\n```", "```py\n> /Users/mlm/pso.py(1)<module>()\n-> import numpy as np\n(Pdb) b 40\nBreakpoint 1 at /Users/mlm/pso.py:40\n(Pdb) c\n> /Users/mlm/pso.py(40)update()\n-> obj = f(X[0], X[1])\n(Pdb) bt\n  /usr/local/Cellar/python@3.9/3.9.9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/bdb.py(580)run()\n-> exec(cmd, globals, locals)\n  <string>(1)<module>()\n  /Users/mlm/pso.py(76)<module>()\n-> anim.save(\"PSO.gif\", dpi=120, writer=\"imagemagick\")\n  /usr/local/lib/python3.9/site-packages/matplotlib/animation.py(1078)save()\n-> anim._init_draw()  # Clear the initial frame\n  /usr/local/lib/python3.9/site-packages/matplotlib/animation.py(1698)_init_draw()\n-> self._draw_frame(frame_data)\n  /usr/local/lib/python3.9/site-packages/matplotlib/animation.py(1720)_draw_frame()\n-> self._drawn_artists = self._func(framedata, *self._args)\n  /Users/mlm/pso.py(65)animate()\n-> update()\n> /Users/mlm/pso.py(40)update()\n-> obj = f(X[0], X[1])\n(Pdb) p r1\n0.8054505373292797\n(Pdb) p r2\n0.7543489945823536\n(Pdb) p X\narray([[2.77550474, 1.60073607, 2.14133019, 4.11466522, 0.2445649 ,\n        0.65149396, 3.24520628, 4.08804798, 0.89696478, 2.82703884,\n        4.42055413, 1.03681404, 0.95318658, 0.60737118, 1.17702652,\n        4.67551174, 3.95781321, 0.95077669, 4.08220292, 1.33330594],\n       [2.07985611, 4.53702225, 3.81359193, 1.83427181, 0.87867832,\n        1.8423856 , 0.11392109, 1.2635162 , 3.84974582, 0.27397365,\n        2.86219806, 3.05406841, 0.64253831, 1.85730719, 0.26090638,\n        4.28053621, 4.71648133, 0.44101305, 4.14882396, 2.74620598]])\n(Pdb) n\n> /Users/mlm/pso.py(41)update()\n-> pbest[:, (pbest_obj >= obj)] = X[:, (pbest_obj >= obj)]\n(Pdb) n\n> /Users/mlm/pso.py(42)update()\n-> pbest_obj = np.array([pbest_obj, obj]).min(axis=0)\n(Pdb) n\n> /Users/mlm/pso.py(43)update()\n-> gbest = pbest[:, pbest_obj.argmin()]\n(Pdb) n\n> /Users/mlm/pso.py(44)update()\n-> gbest_obj = pbest_obj.min()\n(Pdb)\n```", "```py\n(Pdb) b 40, r1 > 0.5\nBreakpoint 1 at /Users/mlm/pso.py:40\n(Pdb) c\n> /Users/mlm/pso.py(40)update()\n-> obj = f(X[0], X[1])\n(Pdb) p r1, r2\n(0.8054505373292797, 0.7543489945823536)\n(Pdb) c\n> /Users/mlm/pso.py(40)update()\n-> obj = f(X[0], X[1])\n(Pdb) p r1, r2\n(0.5404045753007164, 0.2967937508800147)\n(Pdb)\n```", "```py\n(Pdb) l\n 35  \t    global V, X, pbest, pbest_obj, gbest, gbest_obj\n 36  \t    # Update params\n 37  \t    r1, r2 = np.random.rand(2)\n 38  \t    V = w * V + c1*r1*(pbest - X) + c2*r2*(gbest.reshape(-1,1)-X)\n 39  \t    X = X + V\n 40 B->\t    obj = f(X[0], X[1])\n 41  \t    pbest[:, (pbest_obj >= obj)] = X[:, (pbest_obj >= obj)]\n 42  \t    pbest_obj = np.array([pbest_obj, obj]).min(axis=0)\n 43  \t    gbest = pbest[:, pbest_obj.argmin()]\n 44  \t    gbest_obj = pbest_obj.min()\n 45\n(Pdb) p V\narray([[ 0.03742722,  0.20930531,  0.06273426, -0.1710678 ,  0.33629384,\n         0.19506555, -0.10238065, -0.12707257,  0.28042122, -0.03250191,\n        -0.14004886,  0.13224399,  0.16083673,  0.21198813,  0.17530208,\n        -0.27665503, -0.15344393,  0.20079061, -0.10057509,  0.09128536],\n       [-0.05034548, -0.27986224, -0.30725954,  0.11214169,  0.0934514 ,\n         0.00335978,  0.20517519,  0.06308483, -0.22007053,  0.26176423,\n        -0.12617228, -0.05676629,  0.18296986, -0.01669114,  0.18934933,\n        -0.27623121, -0.32482898,  0.213894  , -0.34427909, -0.12058168]])\n(Pdb) p r1, r2\n(0.5404045753007164, 0.2967937508800147)\n(Pdb) r1 = 0.2\n(Pdb) p r1, r2\n(0.2, 0.2967937508800147)\n(Pdb) j 38\n> /Users/mlm/pso.py(38)update()\n-> V = w * V + c1*r1*(pbest - X) + c2*r2*(gbest.reshape(-1,1)-X)\n(Pdb) n\n> /Users/mlm/pso.py(39)update()\n-> X = X + V\n(Pdb) p V\narray([[ 0.02680837,  0.16594979,  0.06350735, -0.15577623,  0.30737655,\n         0.19911613, -0.08242418, -0.12513798,  0.24939995, -0.02217463,\n        -0.13474876,  0.14466204,  0.16661846,  0.21194543,  0.16952298,\n        -0.24462505, -0.138997  ,  0.19377154, -0.10699911,  0.10631063],\n       [-0.03606147, -0.25128615, -0.26362411,  0.08163408,  0.09842085,\n         0.00765688,  0.19771385,  0.06597805, -0.20564599,  0.23113388,\n        -0.0956787 , -0.07044121,  0.16637064, -0.00639259,  0.18245734,\n        -0.25698717, -0.30336147,  0.19354112, -0.29904698, -0.08810355]])\n(Pdb)\n```", "```py\n(Pdb) bt\n  /usr/local/Cellar/python@3.9/3.9.9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/bdb.py(580)run()\n-> exec(cmd, globals, locals)\n  <string>(1)<module>()\n  /Users/mlm/pso.py(76)<module>()\n-> anim.save(\"PSO.gif\", dpi=120, writer=\"imagemagick\")\n  /usr/local/lib/python3.9/site-packages/matplotlib/animation.py(1091)save()\n-> anim._draw_next_frame(d, blit=False)\n  /usr/local/lib/python3.9/site-packages/matplotlib/animation.py(1126)_draw_next_frame()\n-> self._draw_frame(framedata)\n  /usr/local/lib/python3.9/site-packages/matplotlib/animation.py(1720)_draw_frame()\n-> self._drawn_artists = self._func(framedata, *self._args)\n  /Users/mlm/pso.py(65)animate()\n-> update()\n> /Users/mlm/pso.py(39)update()\n-> X = X + V\n(Pdb) up\n> /Users/mlm/pso.py(65)animate()\n-> update()\n(Pdb) bt\n  /usr/local/Cellar/python@3.9/3.9.9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/bdb.py(580)run()\n-> exec(cmd, globals, locals)\n  <string>(1)<module>()\n  /Users/mlm/pso.py(76)<module>()\n-> anim.save(\"PSO.gif\", dpi=120, writer=\"imagemagick\")\n  /usr/local/lib/python3.9/site-packages/matplotlib/animation.py(1091)save()\n-> anim._draw_next_frame(d, blit=False)\n  /usr/local/lib/python3.9/site-packages/matplotlib/animation.py(1126)_draw_next_frame()\n-> self._draw_frame(framedata)\n  /usr/local/lib/python3.9/site-packages/matplotlib/animation.py(1720)_draw_frame()\n-> self._drawn_artists = self._func(framedata, *self._args)\n> /Users/mlm/pso.py(65)animate()\n-> update()\n  /Users/mlm/pso.py(39)update()\n-> X = X + V\n(Pdb) l\n 60\n 61     def animate(i):\n 62         \"Steps of PSO: algorithm update and show in plot\"\n 63         title = 'Iteration {:02d}'.format(i)\n 64         # Update params\n 65  ->     update()\n 66         # Set picture\n 67         ax.set_title(title)\n 68         pbest_plot.set_offsets(pbest.T)\n 69         p_plot.set_offsets(X.T)\n 70         p_arrow.set_offsets(X.T)\n(Pdb) p title\n'Iteration 02'\n(Pdb)\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QWidget, QMainWindow\n\nclass Frame(QMainWindow):\n        def __init__(self):\n                super().__init__()\n                self.initUI()\n        def initUI(self):\n                self.setWindowTitle(\"Simple title\")\n                self.resize(800,600)\n\ndef main():\n        app = QApplication(sys.argv)\n        frame = Frame()\n        frame.show()\n        sys.exit(app.exec_())\n\nif __name__ == '__main__':\n        main()\n```", "```py\npython simpleqt.py &\n```", "```py\nps a | grep python\n```", "```py\n...\n   3997 pts/1    Sl     0:00 python simpleqt.py\n...\n```", "```py\ngdb python 3997\n```", "```py\nGNU gdb (Debian 10.1-1.7) 10.1.90.20210103-git\nCopyright (C) 2021 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nType \"show copying\" and \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<https://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n    <http://www.gnu.org/software/gdb/documentation/>.\n\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from python...\nReading symbols from /usr/lib/debug/.build-id/f9/02f8a561c3abdb9c8d8c859d4243bd8c3f928f.debug...\nAttaching to program: /usr/local/bin/python, process 3997\n[New LWP 3998]\n[New LWP 3999]\n[New LWP 4001]\n[New LWP 4002]\n[New LWP 4003]\n[New LWP 4004]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n0x00007fb11b1c93ff in __GI___poll (fds=0x7fb110007220, nfds=3, timeout=-1) at ../sysdeps/unix/sysv/linux/poll.c:29\n29      ../sysdeps/unix/sysv/linux/poll.c: No such file or directory.\n(gdb) py-bt\nTraceback (most recent call first):\n  <built-in method exec_ of QApplication object at remote 0x7fb115f64c10>\n  File \"/mnt/data/simpleqt.py\", line 16, in main\n    sys.exit(app.exec_())\n  File \"/mnt/data/simpleqt.py\", line 19, in <module>\n    main()\n(gdb) py-list\n  11    \n  12    def main():\n  13            app = QApplication(sys.argv)\n  14            frame = Frame()\n  15            frame.show()\n >16            sys.exit(app.exec_())\n  17    \n  18    if __name__ == '__main__':\n  19            main()\n(gdb)\n```"]