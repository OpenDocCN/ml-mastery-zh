- en: 'What you need to know before you get started: A brief tour of Calculus Pre-Requisites'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始之前你需要知道的：微积分前提知识的简要介绍
- en: 原文：[https://machinelearningmastery.com/what-you-need-to-know-before-you-get-started-a-brief-tour-of-calculus-pre-requisites/](https://machinelearningmastery.com/what-you-need-to-know-before-you-get-started-a-brief-tour-of-calculus-pre-requisites/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://machinelearningmastery.com/what-you-need-to-know-before-you-get-started-a-brief-tour-of-calculus-pre-requisites/](https://machinelearningmastery.com/what-you-need-to-know-before-you-get-started-a-brief-tour-of-calculus-pre-requisites/)
- en: We have [previously](https://machinelearningmastery.com/calculus-in-machine-learning-why-it-works/)
    seen that calculus is one of the core mathematical concepts in machine learning
    that permits us to understand the internal workings of different machine learning
    algorithms.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们[之前](https://machinelearningmastery.com/calculus-in-machine-learning-why-it-works/)见过，微积分是机器学习中核心的数学概念之一，它使我们能够理解不同机器学习算法的内部工作原理。
- en: Calculus, in turn, builds on several fundamental concepts that derive from algebra
    and geometry. The importance of having these fundamentals at hand will become
    even more important as we work our way through more advanced topics of calculus,
    such as the evaluation of limits and the computation of derivatives, to name a
    few.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 微积分又建立在几个基本概念之上，这些概念来源于代数和几何。掌握这些基础知识将变得更加重要，特别是当我们深入学习微积分的高级主题时，如极限的评估和导数的计算等。
- en: In this tutorial, you will discover several pre-requisites that will help you
    work with calculus.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，你将发现几个前提知识，这些知识将帮助你学习微积分。
- en: 'After completing this tutorial, you will know:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本教程后，你将了解：
- en: Linear and non-linear functions are central to calculus and machine learning,
    and many calculus problems involve their use.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性和非线性函数在微积分和机器学习中至关重要，许多微积分问题都涉及它们的使用。
- en: Fundamental concepts from algebra and trigonometry provide the foundations for
    calculus, and will become especially important as we tackle more advanced calculus
    topics.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代数和三角函数的基本概念为微积分提供了基础，这些基础在我们处理更高级的微积分主题时尤其重要。
- en: Let’s get started.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: '[![](../Images/f5c9623d57f993d68d798f5e59cfa11c.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_cover-scaled.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/f5c9623d57f993d68d798f5e59cfa11c.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_cover-scaled.jpg)'
- en: 'What you need to know before you get started: A brief tour of Calculus Pre-Requisites'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 开始之前你需要知道的：微积分前提知识的简要介绍
- en: Photo by [Dino Reichmuth](https://unsplash.com/photos/A5rCN8626Ck), some rights
    reserved.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Dino Reichmuth](https://unsplash.com/photos/A5rCN8626Ck)，保留某些权利。
- en: '**Tutorial Overview**'
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**教程概览**'
- en: 'This tutorial is divided into three parts; they are:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程分为三个部分，它们是：
- en: The Concept of a Function
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数的概念
- en: Fundamentals of Pre-Algebra and Algebra
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预代数和代数基础
- en: Fundamentals of Trigonometry
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 三角函数基础
- en: '**The Concept of a Function**'
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**函数的概念**'
- en: A function is a rule that defines the relationship between a dependent variable
    and an independent variable.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 函数是定义依赖变量与自变量之间关系的规则。
- en: '*Examples are all around us: The average daily temperature for your city depends
    on, and is a function of, the time of year; the distance an object has fallen
    is a function of how much time has elapsed since you dropped it; the area of a
    circle is a function of its radius; and the pressure of an enclosed gas is a function
    of its temperature. *'
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*示例无处不在：你所在城市的每日平均温度依赖于且是时间的函数；物体下落的距离是自你放手以来经过时间的函数；圆的面积是其半径的函数；封闭气体的压力是其温度的函数。*'
- en: ''
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*–* Page 43, Calculus for Dummies, 2016.'
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*–* 《傻瓜微积分》第43页，2016年。'
- en: 'In machine learning, a neural network learns a function by which it can represent
    the relationship between features in the input, the independent variable, and
    the expected output, the dependent variable. In such a scenario, therefore, the
    learned function defines a deterministic mapping between the input values and
    one or more output values. We can represent this mapping as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习中，神经网络通过学习一个函数来表示输入特征（自变量）与期望输出（依赖变量）之间的关系。因此，在这种情况下，学习到的函数定义了输入值和一个或多个输出值之间的确定性映射。我们可以如下表示这种映射：
- en: Output(s) = function(Inputs)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 输出 = 函数(输入)
- en: 'More formally, however, a function is often represented by *y* = *f*(*x*),
    which translates to *y is a function of x*. This notation specifies *x* as the
    independent input variable that we already know, whereas *y* is the dependent
    output variable that we wish to find. For example, if we consider the squaring
    function, *f*(*x*) = *x*², then inputting a value of 3 would produce an output
    of 9:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 更正式地说，函数通常用*y* = *f*(*x*)表示，这意味着*y是x的函数*。这种符号表示*x*是我们已知的自变量，而*y*是我们希望找出的因变量。例如，如果我们考虑平方函数，*f*(*x*)
    = *x*²，输入值3会产生输出9：
- en: '*y* = *f*(3) = 9'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*y* = *f*(3) = 9'
- en: A function can also be represented pictorially by a *graph* on an *x*–*y* coordinate
    plane.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 函数也可以通过*x*–*y*坐标平面上的*图形*来表示。
- en: '*By the graph of the function f we mean the collection of all points (x, f(x)). *'
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*函数f的图形指的是所有点(x, f(x))的集合。*'
- en: ''
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*–* Page 13, The Hitchhiker’s Guide To Calculus, 2019.'
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*–* 第13页，《微积分的指南》，2019年。'
- en: 'When graphing a function, the independent input variable is placed on the *x*-axis,
    while the dependent output variable goes on the *y*-axis. A graph helps to illustrate
    the relationship between the independent and dependent variables better: is the
    graph (and, hence, the relationship) rising or falling, and by which rate?'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制函数图形时，自变量输入变量放在*x*-轴上，而因变量输出变量放在*y*-轴上。图形有助于更好地说明自变量和因变量之间的关系：图形是上升还是下降？以何种速度？
- en: 'A straight line is one of the simplest functions that can be graphed on the
    coordinate plane. Take, for example, the graph of the line *y* = 3*x* + 5:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 直线是可以在坐标平面上绘制的最简单函数之一。例如，*y* = 3*x* + 5的图形：
- en: '[![](../Images/4d87e86655a56dcbc79279a33495fe85.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_1.png)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/4d87e86655a56dcbc79279a33495fe85.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_1.png)'
- en: Line Plot of a Linear Function
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 线性函数的线图
- en: Taken from Calculus for Dummies
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 摘自《傻瓜微积分》
- en: 'This straight line can be described by a *linear* function, so called because
    the output changes proportionally to any change in the input. The linear function
    that describes this straight line can be represented in slope-intercept form,
    where the slope is denoted by *m*, and the *y*-intercept by *c*:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这条直线可以用*线性*函数来描述，因此称为线性函数，因为输出会随着输入的变化而成比例变化。描述这条直线的线性函数可以用斜率-截距形式表示，其中斜率用*m*表示，*y*截距用*c*表示：
- en: '*f*(*x*) = *mx* + *c* = 3*x* + 5'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '*f*(*x*) = *mx* + *c* = 3*x* + 5'
- en: We had seen how to calculate the slope when we addressing the topic of [Rate
    of Change](https://machinelearningmastery.com/?p=12415&preview=true).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到如何在讨论[变化率](https://machinelearningmastery.com/?p=12415&preview=true)时计算斜率。
- en: 'If we had to consider the special case of setting the slope to zero, the resulting
    horizontal line would be described by a *constant* function of the form:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们考虑将斜率设为零的特殊情况，得到的水平线将由*常数*函数的形式描述：
- en: '*f*(*x*) = *c* = 5'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*f*(*x*) = *c* = 5'
- en: 'Within the context of machine learning, the calculation defined by such a linear
    function is implemented by every neuron in a neural network. Specifically, each
    neuron receives a set of *n* inputs, *x**[i]*, from the previous layer of neurons
    or from the training data, and calculates a weighted sum of these inputs (where
    the *weight*, *w**[i]*, is more common term for the slope, *m*, in machine learning)
    to produce an output, *z*:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习的背景下，这种线性函数定义的计算由神经网络中的每个神经元实现。具体而言，每个神经元从前一层神经元或训练数据中接收一组*n*输入，*x**[i]*，并计算这些输入的加权和（其中*weight*，*w**[i]*，在机器学习中是斜率*m*的更常见术语），以产生输出*z*：
- en: '[![](../Images/80ab764860745537a8cc9deb3ec76f08.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_2.png)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/80ab764860745537a8cc9deb3ec76f08.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_2.png)'
- en: The Weighted Sum of Inputs
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 输入的加权和
- en: Taken from Deep Learning
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 摘自《深度学习》
- en: The process of training a neural network involves learning the weights that
    best represent the patterns in the input dataset, which process is carried out
    by the gradient descent algorithm.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 训练神经网络的过程涉及学习最佳表示输入数据集模式的权重，这一过程由梯度下降算法完成。
- en: In addition to the linear function, there exists another family of *non-linear*
    functions.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 除了线性函数，还有另一类*非线性*函数。
- en: 'The simplest of all non-linear functions can be considered to be the parabola,
    that may be described by:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 所有非线性函数中最简单的可以认为是抛物线，可以描述为：
- en: '*y* = *f*(*x*) = *x*²'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*y* = *f*(*x*) = *x*²'
- en: When graphed, we find that this is an even function, because it is symmetric
    about the *y*-axis, and never falls below the *x*-axis.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当绘制图形时，我们发现这是一个偶函数，因为它关于 *y* 轴对称，并且从不低于 *x* 轴。
- en: '[![](../Images/d68b07600585b308a55ea8ec5e840ab3.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_3.png)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/d68b07600585b308a55ea8ec5e840ab3.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_3.png)'
- en: Line Plot of a Parabola
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 抛物线的线性图
- en: Taken from Calculus for Dummies
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 摘自《傻瓜微积分》
- en: 'Nonetheless, non-linear functions can take many different shapes. Consider,
    for instance, the exponential function of the form *f*(*x*) = *b**^x*, which grows
    or decays indefinitely, or *monotonically*, depending on the value of *x*:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，非线性函数可以呈现多种不同的形状。例如，考虑形式为 *f*(*x*) = *b**^x* 的指数函数，它可以无限增长或衰减，或者*单调*，这取决于
    *x* 的值：
- en: '[![](../Images/d74a852056178e22428d340eabd1e1db.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_5.png)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/d74a852056178e22428d340eabd1e1db.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_5.png)'
- en: Line Plot of an Exponential Function
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 指数函数的线性图
- en: Taken from Calculus for Dummies
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 摘自《傻瓜微积分》
- en: 'Or the logarithmic function of the form *f*(*x*) = *log**[2]**x*, which is
    similar to the exponential function but with the *x*– and *y*-axes switched:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 或者形式为 *f*(*x*) = *log**[2]**x* 的对数函数，它类似于指数函数，但* x* 轴和 *y* 轴交换了位置：
- en: '[![](../Images/bab8900674d8d2ae497e7a9e43a9289e.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_6.png)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/bab8900674d8d2ae497e7a9e43a9289e.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_6.png)'
- en: Line Plot of a Logarithmic Function
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对数函数的线性图
- en: Taken from Calculus for Dummies
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 摘自《傻瓜微积分》
- en: 'Of particular interest for deep learning are the logistic, tanh, and the rectified
    linear units (ReLU) non-linear functions, which serve as *activation functions*:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 对于深度学习，特别感兴趣的是逻辑函数、tanh 函数和修正线性单元（ReLU）非线性函数，它们作为 *激活函数*：
- en: '[![](../Images/6e556e1bb91fd0d27db63c3823e1720e.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_4.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/6e556e1bb91fd0d27db63c3823e1720e.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_4.jpg)'
- en: Line Plots of the Logistic, Tanh and ReLU Functions
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑函数、Tanh 函数和 ReLU 函数的线性图
- en: Taken from Deep Learning
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 摘自《深度学习》
- en: 'The importance of these activation functions lies in the introduction of a
    non-linear mapping into the processing of a neuron. If we had to rely solely on
    the linear regression performed by each neuron in calculating a weighted sum of
    the inputs, then we would be restricted to learning only a linear mapping from
    the inputs to the outputs. However, many real-world relationships are more complex
    than this, and a linear mapping would not accurately model them. Introducing a
    non-linearity to the output, *z*, of the neuron, allows the neural network to
    model such non-linear relationships:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这些激活函数的重要性在于它们将非线性映射引入神经元的处理过程中。如果我们只能依赖每个神经元执行的线性回归来计算输入的加权和，那么我们只能学习从输入到输出的线性映射。然而，许多现实世界的关系比这更复杂，线性映射不能准确建模它们。引入对神经元输出
    *z* 的非线性，使得神经网络能够建模这些非线性关系：
- en: Output = activation_function(z)
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 输出 = 激活函数(z)
- en: '*… a neuron, the fundamental building block of neural networks and deep learning,
    is defined by a simple two-step sequence of operations: calculating a weighted
    sum and then passing the result through an activation function. *'
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*… 一个神经元，神经网络和深度学习的基本构建块，通过一个简单的两步操作序列来定义：计算加权和，然后通过激活函数传递结果。*'
- en: ''
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*–* Page 76, Deep Learning, 2019.'
  id: totrans-68
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*–* 第76页，深度学习，2019年。'
- en: Non-linear functions appear elsewhere in the process of training a neural network
    too, in the form of error functions.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 非线性函数在训练神经网络的过程中也会以误差函数的形式出现。
- en: 'A non-linear error function can be generated by calculating the error between
    the predicted and the target output values as the weights of the model change.
    Its shape can be as simple as a parabola, but most often it is characterised by
    many local minima and saddle points. The gradient descent algorithm descends this
    non-linear error function by calculating the slope of the *tangent* line that
    touches the curve at some particular instance: another important concept in calculus
    that permits us to analyse complex curved functions by cutting them into many
    infinitesimal straight pieces arranged alongside one another.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 通过计算预测值与目标输出值之间的误差，随着模型权重的变化，可以生成非线性误差函数。其形状可以像抛物线一样简单，但通常特征是有许多局部最小值和鞍点。梯度下降算法通过计算在某个特定点接触曲线的*切线*的斜率来下降这个非线性误差函数：这是微积分中的另一个重要概念，它允许我们通过将复杂的曲线函数分割成许多无穷小的直线片段来进行分析。
- en: '**Fundamentals of Pre-Algebra and Algebra**'
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**初等代数和代数基础**'
- en: Algebra is one of the important foundations of calculus.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 代数是微积分的重要基础之一。
- en: '*Algebra is the language of calculus. You can’t do calculus without knowing
    algebra any more than you can write Chinese poetry without knowing Chinese. *'
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*代数是微积分的语言。你不能做微积分而不懂代数，就像你不能写中文诗而不懂中文一样。*'
- en: ''
  id: totrans-74
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*–* Page 29, Calculus for Dummies, 2016.'
  id: totrans-75
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*–* 《傻瓜微积分》，第29页，2016年。'
- en: There are several fundamental concepts of algebra that turn out to be useful
    for calculus, such as those concerning fractions, powers, square roots, and logarithms.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 代数中有几个基本概念对于微积分很有用，例如那些涉及分数、幂、平方根和对数的概念。
- en: Let’s first start by revising the basics for working with fractions.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先从复习处理分数的基础知识开始。
- en: '**Division by Zero**: The denominator of a fraction can never be equal to zero.
    For example, the result of a fraction such as 5/0 is undefined. The intuition
    behind this is that you can never add up the value in the numerator, using multiples
    of the zero in the denominator.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**除以零**：分数的分母不能为零。例如，像5/0这样的分数结果是未定义的。其直觉在于，你永远无法使用零的倍数将分子中的值加总起来。'
- en: '**Reciprocal**: The reciprocal of a fraction is its multiplicative inverse.
    In simpler terms, to find the reciprocal of a fraction, flip it upside down. Hence,
    the reciprocal of 3/4, for instance, becomes 4/3.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**倒数**：分数的倒数是其乘法逆元素。简单来说，要找到分数的倒数，就把它翻转过来。因此，例如，3/4的倒数变为4/3。'
- en: '**Multiplication of Fractions**: Multiplication between fractions is as straightforward
    as multiplying across the numerators, and multiplying across the denominators:'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分数的乘法**：分数之间的乘法就像是将分子相乘，并将分母相乘一样简单。'
- en: (a / b) * (c / d) = ac / bd
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: (a / b) * (c / d) = ac / bd
- en: '**Division of Fractions**: The division of fractions is very similar to multiplication,
    but with an additional step; the reciprocal of the second fraction is first found
    before multiplying. Hence, considering again two generic fractions:'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分数的除法**：分数的除法与乘法非常相似，但多了一步；首先找到第二个分数的倒数，然后进行乘法。因此，再考虑两个一般分数：'
- en: (a / b) ÷ (c / d) = (a / b) * (d / c) = ad / bc
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: (a / b) ÷ (c / d) = (a / b) * (d / c) = ad / bc
- en: '**Addition of Fractions**: An important first step is to find a common denominator
    between all fractions to be added. Any common denominator will do, but we usually
    find the *least* common denominator. Finding the least common denominator is,
    at times, as simple as multiplying the denominators of all individual fractions:'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分数的加法**：一个重要的第一步是找到所有需要加的分数之间的共同分母。任何共同的分母都可以，但我们通常会找*最小*共同分母。找到最小共同分母有时就像是将所有单个分数的分母相乘一样简单。'
- en: (a / b) + (c / d) = (ad + cb) / bd
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: (a / b) + (c / d) = (ad + cb) / bd
- en: '**Subtraction of Fractions**: The subtraction of fractions follows a similar
    procedure as for the addition of fractions:'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分数的减法**：分数的减法遵循与分数加法类似的程序：'
- en: (a / b) – (c / d) = (ad – cb) / bd
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: (a / b) – (c / d) = (ad – cb) / bd
- en: '**Cancelling in Fractions**: Fractions with an unbroken chain of multiplications
    across the entire numerator, as well as across the entire denominator, can be
    simplified by cancelling out any common terms that appear in both the numerator
    and the denominator:'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分数的约简**：分子和分母中的每一部分都存在连续的乘法链，可以通过约简出现在分子和分母中的任何共同项来简化分数：'
- en: a³b² / ac = a²b² / c
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: a³b² / ac = a²b² / c
- en: The next important pre-requisite for calculus revolves around exponents, or
    powers as they are also commonly referred to. There are several rules to keep
    in mind when working with powers too.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 计算微积分的下一个重要先决条件是指数，或者通常被称为幂。在处理幂时，有几个需要记住的规则。
- en: '**The Power of Zero**: The result of any number (whether rational or irrational,
    negative or positive, *except* for zero itself) raised to the power of zero, is
    equal to one:'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零的幂**: 任何数（无论是有理数还是无理数，负数还是正数，*除了*零本身）的零次幂等于一：'
- en: x⁰ = 1
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: x⁰ = 1
- en: '**Negative Powers**: A base number raised to a negative power turns into a
    fraction, but does not change sign:'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**负指数**: 一个底数的负指数变成一个分数，但符号不改变：'
- en: x^(-a) = 1 / x^a
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: x^(-a) = 1 / x^a
- en: '**Fractional Powers**: A base number raised to a fractional power can be converted
    into a root problem:'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分数指数**: 一个底数的分数指数可以转化为一个根号问题：'
- en: x^(a/b) = (^b√x)^a = ^b√x^a
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: x^(a/b) = (^b√x)^a = ^b√x^a
- en: '**Addition of Powers**: If two (or more) *equivalent* base terms are being
    multiplied to one another, then their powers may be added:'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**幂的加法**: 如果两个（或更多）*相等*的基数项相乘，那么它们的幂可以相加：'
- en: x^a * x^b = x^((a + b))
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: x^a * x^b = x^((a + b))
- en: '**Subtraction of Powers**: Similarly, if two equivalent base terms are being
    divided, then their power may be subtracted:'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**幂的减法**: 类似地，如果两个相等的基数项被除，那么它们的幂可以相减：'
- en: x^a / x^b = x^((a – b))
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: x^a / x^b = x^((a – b))
- en: '**Power of Powers**: If a power is also raised to a power, then the two powers
    may be multiplied by one another:'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**幂的幂**: 如果一个幂也被提升到一个幂，那么这两个幂可以相乘：'
- en: (x^a)^b = x^((ab))
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: (x^a)^b = x^((ab))
- en: '**Distribution of Powers**: Whether the base numbers are being multiplied or
    divided, the power may be distributed to each variable. However, it *cannot* be
    distributed if the base numbers are, otherwise, being added or subtracted:'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**幂的分配**: 无论基数是相乘还是相除，幂都可以分配给每个变量。但是，如果基数是相加或相减，则*不能*分配：'
- en: (xyz)^a = x^a y^a z^a
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: (xyz)^a = x^a y^a z^a
- en: (x / y)^(a =) x^a / y^a
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: (x / y)^(a =) x^a / y^a
- en: 'Similarly, we have rules for working with roots and rules for working with
    logarithms:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，我们有处理根和对数的规则：
- en: '[![](../Images/459e87ea43b2ce10dd2cea9acdc3b9c3.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_7.png)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/459e87ea43b2ce10dd2cea9acdc3b9c3.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_7.png)'
- en: Properties of Roots
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 根的性质
- en: Taken from Calculus for Dummies
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 摘自《数学小白书》
- en: '[![](../Images/2b5241d0edecb9501d04fb3f12263317.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_8.png)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/2b5241d0edecb9501d04fb3f12263317.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_8.png)'
- en: Properties of Logarithms
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 对数的性质
- en: Taken from Calculus for Dummies
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 摘自《数学小白书》
- en: Finally, knowing how to solve quadratic equations can also come in handy in
    calculus.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，知道如何解决二次方程在微积分中也很有用。
- en: 'If the quadratic equation is factorable, then the easiest method to solve it
    is to express the sum of terms in product form. For example, the following quadratic
    equation can be factored as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果二次方程是可因式分解的，则解决它的最简单方法是将项的总和表达为乘积形式。例如，以下二次方程可以分解为：
- en: x² – 9 = (x + 3)(x – 3) = 0
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: x² – 9 = (x + 3)(x – 3) = 0
- en: Setting each factor to zero permits us to find a solution to this equation,
    which in this case is *x* = ±3.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 将每个因子设为零允许我们找到这个方程的解，本例中为 *x* = ±3。
- en: 'Alternatively, the following quadratic formula may be used:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，可以使用以下二次方程公式：
- en: '[![](../Images/e9974c4aa32b4c0f37fec64e629838ae.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_9.png)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/e9974c4aa32b4c0f37fec64e629838ae.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_9.png)'
- en: The Quadratic Formula
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 二次方程公式
- en: Taken from Calculus for Dummies
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 摘自《数学小白书》
- en: If we had to consider the same quadratic equation as above, then we would set
    the coefficient values to, *a* = 1, *b* = 0, and *c* = 9, which would again result
    in *x* = ±3 as our solution.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们考虑与上述相同的二次方程，则将系数值设为，*a* = 1，*b* = 0，*c* = 9，结果仍然是 *x* = ±3。
- en: '**Fundamentals of Trigonometry**'
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**三角学基础**'
- en: Trigonometry revolves around three main trigonometric functions, which are the
    sine, the cosine and the tangent, and their reciprocals, which are the cosecant,
    the secant and the cotangent, respectively.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 三角函数围绕三个主要的三角函数展开，它们是正弦、余弦和正切，以及它们的倒数，它们分别是余割、正割和余切。
- en: 'When applied to a right angled triangle, these three main functions allow us
    to calculate the lengths of the sides, or any of the other two acute angles of
    the triangle, depending on the information that we have available to start off
    with. Specifically, for some angle, *x*, in the following 3-4-5 triangle:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用于直角三角形时，这三个主要函数使我们能够计算三角形的边长或其他两个锐角中的任何一个，具体取决于我们起始时所掌握的信息。特别是对于某个角度*x*，在以下3-4-5三角形中：
- en: '[![](../Images/998f034a4cd637fb0451c834a03396f1.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_10.png)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/998f034a4cd637fb0451c834a03396f1.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_10.png)'
- en: The 3-4-5 Triangle
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 3-4-5三角形
- en: Taken from Calculus for Dummies
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 摘自《微积分入门》
- en: '[![](../Images/03d34c6a394b89e054b7aaec6808c7a7.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_11.png)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/03d34c6a394b89e054b7aaec6808c7a7.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_11.png)'
- en: The Three Main Trigonometric Functions
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 三大三角函数
- en: Taken from Calculus for Dummies
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 摘自《微积分入门》
- en: 'The sine, cosine and tangent functions only work with right-angled triangles,
    and hence can only be used in the calculation of acute angles that are smaller
    than 90^o. Nonetheless, if we had to work within the *unit circle* on the *x*–*y*
    coordinate plane, then we would be able to apply trigonometry to all angles between
    0^o and 360^o:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦、余弦和切线函数仅适用于直角三角形，因此仅能用于计算小于90°的锐角。然而，如果我们在*x*–*y*坐标平面上的单位圆内工作，则能够对0°至360°之间的所有角度应用三角学：
- en: '[![](../Images/f7278067a0da26a78382b8a9cad4e998.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_12.png)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/f7278067a0da26a78382b8a9cad4e998.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_12.png)'
- en: The Unit Circle
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 单位圆
- en: Taken from Calculus for Dummies
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 摘自《微积分入门》
- en: The unit circle has its center at the origin of the *x*–*y* coordinate plane,
    and a radius of one unit. Rotations around the unit circle are performed in a
    counterclockwise manner, starting from the positive *x*-axis. The cosine of the
    rotated angle would then be given by the *x*-coordinate of the point that hits
    the unit circle, whereas the *y*-coordinate specifies the sine of the rotated
    angle. It is also worth noting that the quadrants are symmetrical, and hence a
    point in one quadrant has symmetrical counterparts in the other three.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 单位圆的中心位于*x*–*y*坐标平面的原点，半径为一个单位。围绕单位圆的旋转是逆时针进行的，从正*x*轴开始。旋转角度后的余弦值由击中单位圆的点的*x*坐标给出，而*sine*值由*y*坐标指定。值得注意的是，四象限是对称的，因此一个象限中的点在其他三个象限中有对称的对应点。
- en: 'The graphed sine, cosine and tangent functions appear as follows:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制的正弦、余弦和切线函数的图形如下：
- en: '[![](../Images/651d90ae51163c29998c4e61a1302e39.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_13.png)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/651d90ae51163c29998c4e61a1302e39.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/what_you_need_to_know_13.png)'
- en: Line Plots of the Sine, Cosine and Tangent Functions
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦、余弦和切线函数的线图
- en: Taken from Calculus for Dummies
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 摘自《微积分入门》
- en: 'All functions are periodic, with the sine and cosine functions featuring the
    same shape albeit being displaced by 90^o between one another. The sine and cosine
    functions may, indeed, be easily sketched from the calculated *x*– and *y*-coordinates
    as one rotates around the unit circle. The tangent function may also be sketched
    similarly, since for any angle ???? this function may be defined by:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 所有函数都是周期性的，正弦和余弦函数具有相同的形状，尽管它们在彼此之间相位差为90°。正弦和余弦函数可以通过在单位圆上旋转时计算的*x*和*y*坐标轻松地描绘出来。切线函数也可以类似地描绘出来，因为对于任何角度θ，该函数可以定义为：
- en: tan ???? = sin ???? / cos ???? = *y* / *x*
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: tan θ = sin θ / cos θ = *y* / *x*
- en: The tangent function is undefined at ±90^o, since the cosine in the denominator
    returns a value of zero at this angle. Hence, we draw vertical *asymptotes* at
    these angles, which are imaginary lines that the curve approaches but never touches.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在±90°处，切线函数未定义，因为分母中的余弦函数在此角度返回零值。因此，我们在这些角度处绘制垂直的*渐近线*，这些是曲线接近但永远不触及的虚拟线。
- en: One final note concerns the inverse of these trigonometric functions. Taking
    the sine function as an example, its inverse is denoted by sin^(-1). This is not
    to be mistaken for the cosecant function, which is rather the *reciprocal* of
    sine, and hence not the same as its inverse.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个注意事项涉及这些三角函数的反函数。以正弦函数为例，其反函数用sin^(-1)表示。这与余割函数不要混淆，余割函数是正弦函数的*倒数*，因此不同于它的反函数。
- en: '**Further Reading**'
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**进一步阅读**'
- en: This section provides more resources on the topic if you are looking to go deeper.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想深入了解这个主题，本节提供更多资源。
- en: '**Books**'
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**书籍**'
- en: '[Deep Learning](https://www.amazon.com/Deep-Learning-Press-Essential-Knowledge/dp/0262537559/ref=sr_1_4?dchild=1&keywords=deep+learning&qid=1622968138&sr=8-4),
    2019.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[《深度学习》](https://www.amazon.com/Deep-Learning-Press-Essential-Knowledge/dp/0262537559/ref=sr_1_4?dchild=1&keywords=deep+learning&qid=1622968138&sr=8-4)，2019年。'
- en: '[Calculus for Dummies](https://www.amazon.com/Calculus-Dummies-Math-Science/dp/1119293499/ref=as_li_ss_tl?dchild=1&keywords=calculus&qid=1606170839&sr=8-2&linkCode=sl1&tag=inspiredalgor-20&linkId=539ed0b89e326b6eb27b1a9a028e9cee&language=en_US),
    2016.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[《数学小白的微积分》](https://www.amazon.com/Calculus-Dummies-Math-Science/dp/1119293499/ref=as_li_ss_tl?dchild=1&keywords=calculus&qid=1606170839&sr=8-2&linkCode=sl1&tag=inspiredalgor-20&linkId=539ed0b89e326b6eb27b1a9a028e9cee&language=en_US)，2016年。'
- en: '[The Hitchhiker’s Guide to Calculus](https://www.amazon.com/Hitchhikers-Calculus-Classroom-Resource-Materials/dp/1470449625/ref=as_li_ss_tl?dchild=1&keywords=The+Hitchhiker%27s+Guide+to+Calculus&qid=1606170787&sr=8-1&linkCode=sl1&tag=inspiredalgor-20&linkId=f8875fa9736746bf29d78fc0c55553d8&language=en_US),
    2019.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[《微积分漫游指南》](https://www.amazon.com/Hitchhikers-Calculus-Classroom-Resource-Materials/dp/1470449625/ref=as_li_ss_tl?dchild=1&keywords=The+Hitchhiker%27s+Guide+to+Calculus&qid=1606170787&sr=8-1&linkCode=sl1&tag=inspiredalgor-20&linkId=f8875fa9736746bf29d78fc0c55553d8&language=en_US)，2019年。'
- en: '**Summary**'
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**摘要**'
- en: In this tutorial, you discovered several pre-requisites for working with calculus.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，你了解到了处理微积分需要的几个先修条件。
- en: 'Specifically, you learned:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，你学到了：
- en: Linear and non-linear functions are central to calculus and machine learning,
    and many calculus problems involve their use.
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性和非线性函数是微积分和机器学习的核心内容，许多微积分问题涉及到它们的使用。
- en: Fundamental concepts from algebra and trigonometry provide the foundations for
    calculus, and will become especially important as we tackle more advanced calculus
    topics.
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代数和三角学中的基本概念为微积分奠定了基础，随着我们探讨更高级的微积分主题，这些将变得尤为重要。
- en: Do you have any questions?
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你有什么问题吗？
- en: Ask your questions in the comments below and I will do my best to answer.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在下方评论区域提出你的问题，我将尽力回答。
