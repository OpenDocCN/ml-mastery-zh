- en: The Power, Product and Quotient Rules
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://machinelearningmastery.com/the-power-product-and-quotient-rules/](https://machinelearningmastery.com/the-power-product-and-quotient-rules/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Optimization, as one of the core processes in many machine learning algorithms,
    relies on the use of derivatives in order to decide in which manner to update
    a model’s parameter values, to maximize or minimize an objective function.
  prefs: []
  type: TYPE_NORMAL
- en: This tutorial will continue exploring the different techniques by which we can
    find the derivatives of functions. In particular, we will be exploring the power,
    product and quotient rules, which we can use to arrive to the derivatives of functions
    faster than if we had to find every derivative from first principles. Hence, for
    functions that are especially challenging, keeping such rules at hand to find
    their derivatives will become increasingly important.
  prefs: []
  type: TYPE_NORMAL
- en: In this tutorial, you will discover the power, product and quotient rules to
    find the derivative of functions.
  prefs: []
  type: TYPE_NORMAL
- en: 'After completing this tutorial, you will know:'
  prefs: []
  type: TYPE_NORMAL
- en: The power rule to follow when finding the derivative of a variable base, raised
    to a fixed power.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How the product rule allows us to find the derivative of a function that is
    defined as the product of another two (or more) functions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How the quotient rule allows us to find the derivative of a function that is
    the ratio of two differentiable functions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/beec3f7ffffac3da4f4ad2d0b8dde97b.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_cover-scaled.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: The Power, Product and Quotient Rules
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Andreas M](https://unsplash.com/photos/vSN9eB6ghio), some rights reserved.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tutorial Overview**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This tutorial is divided into three parts; they are:'
  prefs: []
  type: TYPE_NORMAL
- en: The Power Rule
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Product Rule
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Quotient Rule
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Power Rule**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If we have a variable base raised to a fixed power, the rule to follow in order
    to find its derivative is to bring down the power in front of the variable base,
    and then subtract the power by 1.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, if we have the function, *f*(*x*) = *x**²*, of which we would
    like to find the derivative, we first bring down 2 in front of *x* and then reduce
    the power by 1:'
  prefs: []
  type: TYPE_NORMAL
- en: '*f*(*x*) = *x**²*'
  prefs: []
  type: TYPE_NORMAL
- en: '*f*’(*x*) = 2*x*'
  prefs: []
  type: TYPE_NORMAL
- en: 'For the purpose of understanding better where this rule comes from, let’s take
    the longer route and find the derivative of *f*(*x*) by starting from the definition
    of a derivative:'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/cf52bb1e12ab928b800f3a3c25f0d739.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_1.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we substitute for *f*(*x*) = *x**²* and then proceed to simplify the
    expression:'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/02bd702c3d2e1fe17e40f5387547c8ca.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_2.png)'
  prefs: []
  type: TYPE_NORMAL
- en: As *h* approaches a value of 0, then this limit approaches 2*x*, which tallies
    with the result that we have obtained earlier using the power rule.
  prefs: []
  type: TYPE_NORMAL
- en: If applied to *f*(*x*) = *x*, the power rule give us a value of 1\. That is
    because, when we bring a value of 1 in front of *x*, and then subtract the power
    by 1, what we are left with is a value of 0 in the exponent. Since, *x*⁰ = 1,
    then *f*’(*x*) = (1) (*x*⁰)= 1.
  prefs: []
  type: TYPE_NORMAL
- en: '*The best way to understand this derivative is to realize that f(x) = x is
    a line that fits the form y = mx + b because f(x) = x is the same as f(x) = 1x
    + 0 (or y = 1x + 0). The slope (m) of this line is 1, so the derivative equals
    1\. Or you can just memorize that the derivative of x is 1\. But if you forget
    both of these ideas, you can always use the power rule. *'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Page 131, [Calculus for Dummies](https://www.amazon.com/Calculus-Dummies-Math-Science/dp/1119293499/ref=as_li_ss_tl?dchild=1&keywords=calculus&qid=1606170839&sr=8-2&linkCode=sl1&tag=inspiredalgor-20&linkId=539ed0b89e326b6eb27b1a9a028e9cee&language=en_US),
    2016.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'The power rule can be applied to any power, be it positive, negative, or a
    fraction. We can also apply it to radical functions by first expressing their
    exponent (or power) as a fraction:'
  prefs: []
  type: TYPE_NORMAL
- en: '*f*(*x*) = √*x* = *x*^(1/2)'
  prefs: []
  type: TYPE_NORMAL
- en: '*f’*(*x*) = (1 / 2) *x*^(-1/2)'
  prefs: []
  type: TYPE_NORMAL
- en: '**The Product Rule**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Suppose that we now have a function, *f*(*x*), of which we would like to find
    the derivative, which is the product of another two functions, *u*(*x*) = 2*x*²
    and *v*(*x*) = *x*³:'
  prefs: []
  type: TYPE_NORMAL
- en: '*f*(*x*) = *u*(*x*) *v*(*x*) = (2*x*²) (*x*³)'
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to investigate how to go about finding the derivative of *f*(*x*),
    let’s first start with finding the derivative of the product of *u*(*x*) and *v*(*x*)
    directly:'
  prefs: []
  type: TYPE_NORMAL
- en: (*u*(*x*) *v*(*x*))’ = ((2*x*²) (*x*³))’ = (2*x*⁵)’ = 10*x*⁴
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let’s investigate what happens if we, otherwise, had to compute the derivatives
    of the functions separately first and then multiply them afterwards:'
  prefs: []
  type: TYPE_NORMAL
- en: '*u’*(*x*) *v’*(*x*) = (2*x*²)’ (*x*³)’ = (4*x*) (3*x*²) = 12*x*³'
  prefs: []
  type: TYPE_NORMAL
- en: It is clear that the second result does not tally with the first one, and that
    is because we have not applied the *product rule*.
  prefs: []
  type: TYPE_NORMAL
- en: 'The product rule tells us that the derivative of the product of two functions
    can be found as:'
  prefs: []
  type: TYPE_NORMAL
- en: '*f’*(*x*) = *u’*(*x*) *v*(*x*) + *u*(*x*) *v’*(*x*)'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can arrive at the product rule if we our work our way through by applying
    the properties of limits, starting again with the definition of a derivative:'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/fe2b3242686ce47714bf2cfb135d5379.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_3.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'We know that *f*(*x*) = *u*(*x*) *v*(*x*) and, hence, we can substitute for
    *f*(*x*) and *f*(*x* + *h*):'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/050101dcdd28b628bbd7a3f57b4d79e1.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_4.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'At this stage, our aim is to factorise the numerator into several limits that
    can, then, be evaluated separately. For this purpose, the subtraction of terms,
    *u*(*x*) *v*(*x + h*) – *u*(*x*) *v*(*x + h*), shall be introduced into the numerator.
    Its introduction does not change the definition of *f*’(*x*) that we have just
    obtained, but it will help us factorise the numerator:'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/fbbae7e0472035a154e9ab57088038ca.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_5.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The resulting expression appears complicated, however, if we take a closer
    look we realize that we have common terms that can be factored out:'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/a77347b92737adab962475f04c2c60b0.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_6-e1624272833744.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The expression can be simplified further by applying the limit laws that let
    us separate the sums and products into separate limits:'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/806c13fb2a03c1cad3988a4eacb52c8b.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_7.png)'
  prefs: []
  type: TYPE_NORMAL
- en: The solution to our problem has now become clearer. We can see that the first
    and last terms in the simplified expression correspond to the definition of the
    derivative of *u*(*x*) and *v*(*x*), which we can denote by *u*(*x*)’ and *v*(*x*)’,
    respectively. The second term approaches the continuous and differentiable function,
    *v*(*x*), as *h* approaches 0, whereas the third term is *u*(*x*).
  prefs: []
  type: TYPE_NORMAL
- en: 'Hence, we arrive again at the product rule:'
  prefs: []
  type: TYPE_NORMAL
- en: '*f’*(*x*) = *u’*(*x*) *v*(*x*) + *u*(*x*) *v’*(*x*)'
  prefs: []
  type: TYPE_NORMAL
- en: 'With this new tool in hand, let’s reconsider finding *f*’(*x*) when *u*(*x*)
    = 2*x*² and *v*(*x*) = *x*³:'
  prefs: []
  type: TYPE_NORMAL
- en: '*f’*(*x*) = *u’*(*x*) *v*(*x*) + *u*(*x*) *v’*(*x*)'
  prefs: []
  type: TYPE_NORMAL
- en: '*f’*(*x*) = (4*x*) (*x*³) + (2*x*²) (3*x*²) = 4*x*⁴ + 6*x*⁴ = 10*x*⁴'
  prefs: []
  type: TYPE_NORMAL
- en: The resulting derivative now correctly matches the derivative of the product,
    (*u*(*x*) *v*(*x*))’, that we have obtained earlier.
  prefs: []
  type: TYPE_NORMAL
- en: 'This was a fairly simple example that we could have computed directly in the
    first place. However, we might have more complex problems involving functions
    that cannot be multiplied directly, to which we can easily apply the product rule.
    For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '*f*(*x*) = *x*² sin *x*'
  prefs: []
  type: TYPE_NORMAL
- en: '*f’*(*x*) = (*x*²)’ (sin *x*) + (*x*²) (sin *x*)’ *=* 2*x* sin *x* + *x*² cos
    *x*'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can even extend the product rule to more than two functions. For example,
    say *f*(*x*) is now defined as the product of three functions, *u*(*x*), *v*(*x*)
    and *w*(*x*):'
  prefs: []
  type: TYPE_NORMAL
- en: '*f*(*x*) = *u*(*x*) *v*(*x*) *w*(*x*)'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can apply the product rule as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '*f*’(*x*) = *u*’(*x*) *v*(*x*) *w*(*x*) + *u*(*x*) *v*’(*x*) *w*(*x*) + *u*(*x*)
    *v*(*x*) *w*’(*x*)'
  prefs: []
  type: TYPE_NORMAL
- en: '**The Quotient Rule**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Similarly, the quotient rule tells us how to find the derivative of a function,
    *f*(*x*), that is the ratio of two differentiable functions, *u*(*x*) and *v*(*x*):'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/daabf9ecbb238f69f94cebeb6e478eb3.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_8.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can derive the quotient rule from first principles as we have done for the
    product rule, that is by starting off with the definition of a derivative and
    applying the properties of limits. Or we can take a shortcut and derive the quotient
    rule using the product rule itself. Let’s take this route this time around:'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/9db9c5154f939889d2059517dff3ae38.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_9.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can apply the product rule on *u*(*x*) to obtain:'
  prefs: []
  type: TYPE_NORMAL
- en: '*u*’(*x*) = *f*’(*x*) *v*(*x*) + *f*(*x*) *v*’(*x*)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Solving back for *f*’(*x*) gives us:'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/67fbe65a2acaef2aa180fef5c550889d.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_10.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'One final step substitutes for *f*(*x*) to arrive to the quotient rule:'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/e3b5ec4338a7e4b405dff39267454bd9.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_11.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'We had seen how to find the [derivative of the sine and cosine functions](https://machinelearningmastery.com/?p=12518&preview=true).
    Using the quotient rule, we can now find the derivative of the tangent function
    too:'
  prefs: []
  type: TYPE_NORMAL
- en: '*f*(*x*) = tan *x* = sin *x* / cos *x*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Applying the quotient rule and simplifying the resulting expression:'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/8644490abaa6ca1be52e35cc879d60b0.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_12.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'From the Pythagorean identity in trigonometry, we know that cos²*x* + sin²*x*
    = 1, hence:'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/36699ea94633c3e735a836420cfc38c2.png)](https://machinelearningmastery.com/wp-content/uploads/2021/06/rules_13.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, using the quotient rule, we have easily found that the derivative
    of tangent is the squared secant function.
  prefs: []
  type: TYPE_NORMAL
- en: '**Further Reading**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section provides more resources on the topic if you are looking to go deeper.
  prefs: []
  type: TYPE_NORMAL
- en: '**Books**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Calculus for Dummies](https://www.amazon.com/Calculus-Dummies-Math-Science/dp/1119293499/ref=as_li_ss_tl?dchild=1&keywords=calculus&qid=1606170839&sr=8-2&linkCode=sl1&tag=inspiredalgor-20&linkId=539ed0b89e326b6eb27b1a9a028e9cee&language=en_US),
    2016.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Articles**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Power rule, Wikipedia](https://en.wikipedia.org/wiki/Power_rule).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Product rule, Wikipedia](https://en.wikipedia.org/wiki/Product_rule).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Quotient rule, Wikipedia](https://en.wikipedia.org/wiki/Quotient_rule).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Summary**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this tutorial, you discovered how to apply the power, product and quotient
    rules to find the derivative of functions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Specifically, you learned:'
  prefs: []
  type: TYPE_NORMAL
- en: The power rule to follow when finding the derivative of a variable base, raised
    to a fixed power.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How the product rule allows us to find the derivative of a function that is
    defined as the product of another two (or more) functions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How the quotient rule allows us to find the derivative of a function that is
    the ratio of two differentiable functions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do you have any questions?
  prefs: []
  type: TYPE_NORMAL
- en: Ask your questions in the comments below and I will do my best to answer.
  prefs: []
  type: TYPE_NORMAL
