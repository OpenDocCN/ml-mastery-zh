["```py\n# Import the necessary libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom scipy.stats import boxcox, yeojohnson\nfrom sklearn.preprocessing import QuantileTransformer\n\n# Load the dataset\nAmes = pd.read_csv('Ames.csv')\n\n# Calculate skewness\nsale_price_skew = Ames['SalePrice'].skew()\nyear_built_skew = Ames['YearBuilt'].skew()\n\n# Set the style of seaborn\nsns.set(style='whitegrid')\n\n# Create a figure for 2 subplots (1 row, 2 columns)\nfig, ax = plt.subplots(1, 2, figsize=(14, 6))\n\n# Plot for SalePrice (positively skewed)\nsns.histplot(Ames['SalePrice'], kde=True, ax=ax[0], color='skyblue')\nax[0].set_title('Distribution of SalePrice (Positive Skew)', fontsize=16)\nax[0].set_xlabel('SalePrice')\nax[0].set_ylabel('Frequency')\n# Annotate Skewness\nax[0].text(0.5, 0.5, f'Skew: {sale_price_skew:.2f}', transform=ax[0].transAxes,\n           horizontalalignment='right', color='black', weight='bold',\n           fontsize=14)\n\n# Plot for YearBuilt (negatively skewed)\nsns.histplot(Ames['YearBuilt'], kde=True, ax=ax[1], color='salmon')\nax[1].set_title('Distribution of YearBuilt (Negative Skew)', fontsize=16)\nax[1].set_xlabel('YearBuilt')\nax[1].set_ylabel('Frequency')\n# Annotate Skewness\nax[1].text(0.5, 0.5, f'Skew: {year_built_skew:.2f}', transform=ax[1].transAxes,\n           horizontalalignment='right', color='black', weight='bold',\n           fontsize=14)\n\nplt.tight_layout()\nplt.show()\n```", "```py\n# Applying Log Transformation\nAmes['Log_SalePrice'] = np.log(Ames['SalePrice'])\nprint(f\"Skewness after Log Transformation: {Ames['Log_SalePrice'].skew():.5f}\")\n```", "```py\nSkewness after Log Transformation: 0.04172\n```", "```py\n# Applying Square Root Transformation\nAmes['Sqrt_SalePrice'] = np.sqrt(Ames['SalePrice'])\nprint(f\"Skewness after Square Root Transformation: {Ames['Sqrt_SalePrice'].skew():.5f}\")\n```", "```py\nSkewness after Square Root Transformation: 0.90148\n```", "```py\n# Applying Box-Cox Transformation after checking all values are positive\nif (Ames['SalePrice'] > 0).all():\n    Ames['BoxCox_SalePrice'], _ = boxcox(Ames['SalePrice'])\nelse:\n    # Consider alternative transformations or handling strategies\n    print(\"Not all SalePrice values are positive. Consider using Yeo-Johnson or handling negative values.\")\nprint(f\"Skewness after Box-Cox Transformation: {Ames['BoxCox_SalePrice'].skew():.5f}\")\n```", "```py\nSkewness after Box-Cox Transformation: -0.00436\n```", "```py\n# Applying Yeo-Johnson Transformation\nAmes['YeoJohnson_SalePrice'], _ = yeojohnson(Ames['SalePrice'])\nprint(f\"Skewness after Yeo-Johnson Transformation: {Ames['YeoJohnson_SalePrice'].skew():.5f}\")\n```", "```py\nSkewness after Yeo-Johnson Transformation: -0.00437\n```", "```py\n# Applying Quantile Transformation to follow a normal distribution\nquantile_transformer = QuantileTransformer(output_distribution='normal', random_state=0)\nAmes['Quantile_SalePrice'] = quantile_transformer.fit_transform(Ames['SalePrice'].values.reshape(-1, 1)).flatten()\nprint(f\"Skewness after Quantile Transformation: {Ames['Quantile_SalePrice'].skew():.5f}\")\n```", "```py\nSkewness after Quantile Transformation: 0.00286\n```", "```py\n# Plotting the distributions\nfig, axes = plt.subplots(2, 3, figsize=(18, 15))  # Adjusted for an additional plot\n\n# Flatten the axes array for easier indexing\naxes = axes.flatten()\n\n# Hide unused subplot axes\nfor ax in axes[6:]:\n    ax.axis('off')\n\n# Original SalePrice Distribution\nsns.histplot(Ames['SalePrice'], kde=True, bins=30, color='skyblue', ax=axes[0])\naxes[0].set_title('Original SalePrice Distribution (Skew: 1.76)')\naxes[0].set_xlabel('SalePrice')\naxes[0].set_ylabel('Frequency')\n\n# Log Transformed SalePrice\nsns.histplot(Ames['Log_SalePrice'], kde=True, bins=30, color='blue', ax=axes[1])\naxes[1].set_title('Log Transformed SalePrice (Skew: 0.04172)')\naxes[1].set_xlabel('Log of SalePrice')\naxes[1].set_ylabel('Frequency')\n\n# Square Root Transformed SalePrice\nsns.histplot(Ames['Sqrt_SalePrice'], kde=True, bins=30, color='orange', ax=axes[2])\naxes[2].set_title('Square Root Transformed SalePrice (Skew: 0.90148)')\naxes[2].set_xlabel('Square Root of SalePrice')\naxes[2].set_ylabel('Frequency')\n\n# Box-Cox Transformed SalePrice\nsns.histplot(Ames['BoxCox_SalePrice'], kde=True, bins=30, color='red', ax=axes[3])\naxes[3].set_title('Box-Cox Transformed SalePrice (Skew: -0.00436)')\naxes[3].set_xlabel('Box-Cox of SalePrice')\naxes[3].set_ylabel('Frequency')\n\n# Yeo-Johnson Transformed SalePrice\nsns.histplot(Ames['YeoJohnson_SalePrice'], kde=True, bins=30, color='purple', ax=axes[4])\naxes[4].set_title('Yeo-Johnson Transformed SalePrice (Skew: -0.00437)')\naxes[4].set_xlabel('Yeo-Johnson of SalePrice')\naxes[4].set_ylabel('Frequency')\n\n# Quantile Transformed SalePrice (Normal Distribution)\nsns.histplot(Ames['Quantile_SalePrice'], kde=True, bins=30, color='green', ax=axes[5])\naxes[5].set_title('Quantile Transformed SalePrice (Normal Distn, Skew: 0.00286)')\naxes[5].set_xlabel('Quantile Transformed SalePrice')\naxes[5].set_ylabel('Frequency')\n\nplt.tight_layout(pad=4.0)\nplt.show()\n```", "```py\n# Applying Squared Transformation\nAmes['Squared_YearBuilt'] = Ames['YearBuilt'] ** 2\nprint(f\"Skewness after Squared Transformation: {Ames['Squared_YearBuilt'].skew():.5f}\")\n```", "```py\nSkewness after Squared Transformation: -0.57207\n```", "```py\n# Applying Cubed Transformation\nAmes['Cubed_YearBuilt'] = Ames['YearBuilt'] ** 3\nprint(f\"Skewness after Cubed Transformation: {Ames['Cubed_YearBuilt'].skew():.5f}\")\n```", "```py\nSkewness after Cubed Transformation: -0.54539\n```", "```py\n# Applying Box-Cox Transformation after checking all values are positive\nif (Ames['YearBuilt'] > 0).all():\n    Ames['BoxCox_YearBuilt'], _ = boxcox(Ames['YearBuilt'])\nelse:\n    # Consider alternative transformations or handling strategies\n    print(\"Not all YearBuilt values are positive. Consider using Yeo-Johnson or handling negative values.\")\nprint(f\"Skewness after Box-Cox Transformation: {Ames['BoxCox_YearBuilt'].skew():.5f}\")\n```", "```py\nSkewness after Box-Cox Transformation: -0.12435\n```", "```py\n# Applying Yeo-Johnson Transformation\nAmes['YeoJohnson_YearBuilt'], _ = yeojohnson(Ames['YearBuilt'])\nprint(f\"Skewness after Yeo-Johnson Transformation: {Ames['YeoJohnson_YearBuilt'].skew():.5f}\")\n```", "```py\nSkewness after Yeo-Johnson Transformation: -0.12435\n```", "```py\n# Applying Quantile Transformation to follow a normal distribution\nquantile_transformer = QuantileTransformer(output_distribution='normal', random_state=0)\nAmes['Quantile_YearBuilt'] = quantile_transformer.fit_transform(Ames['YearBuilt'].values.reshape(-1, 1)).flatten()\nprint(f\"Skewness after Quantile Transformation: {Ames['Quantile_YearBuilt'].skew():.5f}\")\n```", "```py\nSkewness after Quantile Transformation: 0.02713\n```", "```py\n# Plotting the distributions\nfig, axes = plt.subplots(2, 3, figsize=(18, 15))\n\n# Flatten the axes array for easier indexing\naxes = axes.flatten()\n\n# Original YearBuilt Distribution\nsns.histplot(Ames['YearBuilt'], kde=True, bins=30, color='skyblue', ax=axes[0])\naxes[0].set_title(f'Original YearBuilt Distribution (Skew: {Ames[\"YearBuilt\"].skew():.5f})')\naxes[0].set_xlabel('YearBuilt')\naxes[0].set_ylabel('Frequency')\n\n# Squared YearBuilt\nsns.histplot(Ames['Squared_YearBuilt'], kde=True, bins=30, color='blue', ax=axes[1])\naxes[1].set_title(f'Squared YearBuilt (Skew: {Ames[\"Squared_YearBuilt\"].skew():.5f})')\naxes[1].set_xlabel('Squared YearBuilt')\naxes[1].set_ylabel('Frequency')\n\n# Cubed YearBuilt\nsns.histplot(Ames['Cubed_YearBuilt'], kde=True, bins=30, color='orange', ax=axes[2])\naxes[2].set_title(f'Cubed YearBuilt (Skew: {Ames[\"Cubed_YearBuilt\"].skew():.5f})')\naxes[2].set_xlabel('Cubed YearBuilt')\naxes[2].set_ylabel('Frequency')\n\n# Box-Cox Transformed YearBuilt\nsns.histplot(Ames['BoxCox_YearBuilt'], kde=True, bins=30, color='red', ax=axes[3])\naxes[3].set_title(f'Box-Cox Transformed YearBuilt (Skew: {Ames[\"BoxCox_YearBuilt\"].skew():.5f})')\naxes[3].set_xlabel('Box-Cox YearBuilt')\naxes[3].set_ylabel('Frequency')\n\n# Yeo-Johnson Transformed YearBuilt\nsns.histplot(Ames['YeoJohnson_YearBuilt'], kde=True, bins=30, color='purple', ax=axes[4])\naxes[4].set_title(f'Yeo-Johnson Transformed YearBuilt (Skew: {Ames[\"YeoJohnson_YearBuilt\"].skew():.5f})')\naxes[4].set_xlabel('Yeo-Johnson YearBuilt')\naxes[4].set_ylabel('Frequency')\n\n# Quantile Transformed YearBuilt (Normal Distribution)\nsns.histplot(Ames['Quantile_YearBuilt'], kde=True, bins=30, color='green', ax=axes[5])\naxes[5].set_title(f'Quantile Transformed YearBuilt (Normal Distn, Skew: {Ames[\"Quantile_YearBuilt\"].skew():.5f})')\naxes[5].set_xlabel('Quantile Transformed YearBuilt')\naxes[5].set_ylabel('Frequency')\n\nplt.tight_layout(pad=4.0)\nplt.show()\n```", "```py\n# Import the Kolmogorov-Smirnov Test from scipy.stats\nfrom scipy.stats import kstest\n\n# Run the KS tests for the 10 cases\ntransformations = [\"Log_SalePrice\", \"Sqrt_SalePrice\", \"BoxCox_SalePrice\",\n                    \"YeoJohnson_SalePrice\", \"Quantile_SalePrice\",\n                    \"Squared_YearBuilt\", \"Cubed_YearBuilt\", \"BoxCox_YearBuilt\",\n                    \"YeoJohnson_YearBuilt\", \"Quantile_YearBuilt\"]\n\n# Standardizing the transformations before performing KS test\nks_test_results = {}\nfor transformation in transformations:\n    standardized_data = (Ames[transformation] - Ames[transformation].mean()) / Ames[transformation].std()\n    ks_stat, ks_p_value = kstest(standardized_data, 'norm')\n    ks_test_results[transformation] = (ks_stat, ks_p_value)\n\n# Convert results to DataFrame for easier comparison\nks_test_results_df = pd.DataFrame.from_dict(ks_test_results, orient='index', columns=['KS Statistic', 'P-Value'])\nprint(ks_test_results_df.round(5))\n```", "```py\n                      KS Statistic  P-Value\nLog_SalePrice              0.04261  0.00017\nSqrt_SalePrice             0.07689  0.00000\nBoxCox_SalePrice           0.04294  0.00014\nYeoJohnson_SalePrice       0.04294  0.00014\nQuantile_SalePrice         0.00719  0.99924\nSquared_YearBuilt          0.11661  0.00000\nCubed_YearBuilt            0.11666  0.00000\nBoxCox_YearBuilt           0.11144  0.00000\nYeoJohnson_YearBuilt       0.11144  0.00000\nQuantile_YearBuilt         0.02243  0.14717\n```"]