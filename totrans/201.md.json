["```py\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef getPositionEncoding(seq_len, d, n=10000):\n    P = np.zeros((seq_len, d))\n    for k in range(seq_len):\n        for i in np.arange(int(d/2)):\n            denominator = np.power(n, 2*i/d)\n            P[k, 2*i] = np.sin(k/denominator)\n            P[k, 2*i+1] = np.cos(k/denominator)\n    return P\n\nP = getPositionEncoding(seq_len=4, d=4, n=100)\nprint(P)\n```", "```py\n[[ 0\\.          1\\.          0\\.          1\\.        ]\n [ 0.84147098  0.54030231  0.09983342  0.99500417]\n [ 0.90929743 -0.41614684  0.19866933  0.98006658]\n [ 0.14112001 -0.9899925   0.29552021  0.95533649]]\n```", "```py\ndef plotSinusoid(k, d=512, n=10000):\n    x = np.arange(0, 100, 1)\n    denominator = np.power(n, 2*x/d)\n    y = np.sin(k/denominator)\n    plt.plot(x, y)\n    plt.title('k = ' + str(k))\n\nfig = plt.figure(figsize=(15, 4))    \nfor i in range(4):\n    plt.subplot(141 + i)\n    plotSinusoid(i*4)\n```", "```py\nP = getPositionEncoding(seq_len=100, d=512, n=10000)\ncax = plt.matshow(P)\nplt.gcf().colorbar(cax)\n```"]