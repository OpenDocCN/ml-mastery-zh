- en: Exploring Dictionaries, Classifying Variables, and Imputing Data in the Ames
    Dataset
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索字典、分类变量和填补 Ames 数据集中的数据
- en: 原文：[https://machinelearningmastery.com/classifying_variables/](https://machinelearningmastery.com/classifying_variables/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://machinelearningmastery.com/classifying_variables/](https://machinelearningmastery.com/classifying_variables/)
- en: The real estate market is a complex ecosystem driven by numerous variables such
    as location, property features, market trends, and economic indicators. One dataset
    that offers a deep dive into this complexity is the Ames Housing dataset. Originating
    from Ames, Iowa, this dataset comprises various properties and their characteristics,
    ranging from the type of alley access to the overall condition of the property.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 房地产市场是一个复杂的生态系统，由诸如位置、物业特征、市场趋势和经济指标等多个变量驱动。一个深入探讨这一复杂性的 数据集是 Ames Housing 数据集。该数据集来自
    Iowa 的 Ames，包括各种物业及其特征，从小巷通行方式到物业的整体状况。
- en: In this post, you aim to take a closer look at this dataset using data science
    techniques. Specifically, you’ll focus on how to identify categorical and numerical
    variables, as understanding these variables is crucial for any data-driven decision-making
    process.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，你的目标是通过数据科学技术更详细地了解这个数据集。具体而言，你将关注如何识别分类变量和数值变量，因为理解这些变量对于任何数据驱动的决策过程至关重要。
- en: Let’s get started.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 开始吧。
- en: '![](../Images/901cfca1dbcdd2b628de1d387de9db36.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/901cfca1dbcdd2b628de1d387de9db36.png)'
- en: Exploring Dictionaries, Classifying Variables, and Imputing Data in the Ames
    Dataset
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 探索字典、分类变量和填补 Ames 数据集中的数据
- en: Photo by [Brigitte Tohm](https://unsplash.com/photos/pink-petaled-flowers-bouquet-1i4P2B148FQ).
    Some rights reserved.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Brigitte Tohm](https://unsplash.com/photos/pink-petaled-flowers-bouquet-1i4P2B148FQ)提供。保留所有权利。
- en: Overview
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: 'This post is divided into three parts; they are:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文分为三部分：
- en: The Importance of a Data Dictionary
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据字典的重要性
- en: Identifying Categorical and Numerical Variables
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别分类变量和数值变量
- en: Missing Data Imputation
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺失数据填补
- en: '**The Importance of a Data Dictionary**'
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**数据字典的重要性**'
- en: A crucial first step in analyzing the Ames Housing dataset is utilizing its
    [data dictionary](https://jse.amstat.org/v19n3/decock/DataDocumentation.txt).
    This version does more than list and define the features; it categorizes them
    into **nominal**, **ordinal**, **discrete**, and **continuous** types, guiding
    our analysis approach.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 分析 Ames Housing 数据集的一个关键第一步是利用其[数据字典](https://jse.amstat.org/v19n3/decock/DataDocumentation.txt)。这个版本不仅列出了特征和定义，还将其分类为**名义型**、**顺序型**、**离散型**和**连续型**，以指导我们的分析方法。
- en: '**Nominal Variables** are categories without an order like ‘Neighborhood’.
    They help in identifying segments for grouping analysis.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名义型变量**是没有顺序的类别，如“邻里”。它们有助于识别用于分组分析的细分领域。'
- en: '**Ordinal Variables** have a clear order (e.g ‘KitchenQual’). They allow for
    ranking and order-based analysis but don’t imply equal spacing between categories.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**顺序型变量**具有明确的顺序（例如“厨房质量”）。它们允许进行排序和基于顺序的分析，但不意味着类别之间的间距相等。'
- en: '**Discrete Variables** are countable numbers, like ‘Bedroom’. They are integral
    to analyses that sum or compare quantities.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**离散型变量**是可计数的数字，如“卧室”。它们在汇总或比较数量的分析中至关重要。'
- en: '**Continuous Variables** measure on a continuous scale, like ‘Lot Area’. They
    enable a wide range of statistical analyses that depend on granular detail.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**连续型变量**在连续尺度上进行测量，例如“地块面积”。它们支持广泛的统计分析，依赖于详细的细节。'
- en: Understanding these variable types also guides the selection of appropriate
    visualization techniques. **Nominal and ordinal variables** are well-suited to
    bar charts, which can effectively highlight categorical differences and rankings.
    In contrast, **discrete and continuous variables** are best represented through
    histograms, scatter plots, and line charts, which illustrate distributions, relationships,
    and trends within the data.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 理解这些变量类型也有助于选择适当的可视化技术。**名义型和顺序型变量**适合使用条形图，这可以有效地突出类别差异和排名。相反，**离散型和连续型变量**则最好通过直方图、散点图和折线图来表示，这些图表能够展示数据的分布、关系和趋势。
- en: '**Kick-start your project** with my book [The Beginner’s Guide to Data Science](https://machinelearning.samcart.com/products/beginners-guide-data-science/).
    It provides **self-study tutorials** with **working code**.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**启动你的项目**，请阅读我的书籍[《数据科学初学者指南》](https://machinelearning.samcart.com/products/beginners-guide-data-science/)。它提供了**自学教程**和**工作代码**。'
- en: '**Identifying Categorical and Numerical Variables**'
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**识别分类变量和数值变量**'
- en: Building on our understanding of the data dictionary, let’s delve into how we
    can practically distinguish between categorical and numerical variables within
    the Ames dataset using Python’s pandas library. This step is crucial for informing
    our subsequent data processing and analysis strategies.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 基于我们对数据字典的理解，让我们深入探讨如何使用Python的pandas库在Ames数据集中实际区分分类和数值变量。这一步骤对指导我们后续的数据处理和分析策略至关重要。
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Executing the above code will yield the following output, categorizing each
    feature by its data type:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 执行上述代码将产生以下输出，通过数据类型对每个特征进行分类：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This output reveals that the dataset comprises `object` (44 variables), `int64`
    (27 variables), and `float64` (14 variables) data types. Here, `object` typically
    indicates nominal variables, which are categorical data without an inherent order.
    Meanwhile, `int64` and `float64` suggest numerical data, which could be either
    discrete (`int64` for countable numbers) or continuous (`float64` for measurable
    quantities on a continuous scale).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 该输出显示数据集包含`object`（44个变量）、`int64`（27个变量）和`float64`（14个变量）数据类型。在这里，`object`通常表示名义变量，即没有固有顺序的分类数据。与此同时，`int64`和`float64`则表示数值数据，这些数据可以是离散的（`int64`用于可计数的数字）或连续的（`float64`用于在连续范围内可测量的量）。
- en: Now we can leverage pandas’ `select_dtypes()` method to explicitly separate
    numerical and categorical features within the Ames dataset.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以利用pandas的`select_dtypes()`方法明确区分Ames数据集中的数值特征和分类特征。
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The `numerical_features` captures variables stored as `int64` and `float64`,
    indicative of countable and measurable quantities, respectively. Conversely, the
    `categorical_features` comprises variables of type `object`, typically representing
    nominal or ordinal data without a quantitative value:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`numerical_features`捕获存储为`int64`和`float64`的变量，分别指示可计数和可测量的量。相对而言，`categorical_features`包括类型为`object`的变量，通常表示没有量化值的名义或顺序数据：'
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Notably, some variables, like ‘MSSubClass’ despite being encoded numerically,
    actually serve as categorical data, underscoring the importance of referring back
    to our data dictionary for accurate classification. Similarly, features like ‘MoSold’
    (Month Sold) and ‘YrSold’ (Year Sold) are numerical in nature, but they can often
    be treated as categorical variables, especially when there is no interest in performing
    mathematical operations on them. We can use the `astype()` method in pandas to
    convert these to categorical features.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，某些变量，例如‘MSSubClass’，尽管被编码为数值，但实际上作为分类数据使用，这突显了参考数据字典以确保准确分类的重要性。同样，像‘MoSold’（售出月份）和‘YrSold’（售出年份）这样的特征虽然在本质上是数值的，但在没有进行数学运算的情况下，它们通常可以被视为分类变量。我们可以使用pandas中的`astype()`方法将这些转换为分类特征。
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: After performing this conversion, the count of columns with the `object` data
    type has increased to 47 (from the previous 44), while `int64` has dropped to
    24 (from 27).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行此转换后，`object`数据类型的列数已增加到47（之前为44），而`int64`已降至24（之前为27）。
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: A careful assessment of the data dictionary, the nature of the dataset, and
    domain expertise can contribute to properly reclassifying data types.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对数据字典、数据集的性质和领域专业知识的仔细评估可以有助于正确地重新分类数据类型。
- en: '**Missing Data Imputation**'
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**缺失数据填补**'
- en: Dealing with missing data is a challenge that every data scientist faces. Ignoring
    missing values or handling them inadequately can lead to skewed analysis and incorrect
    conclusions. The choice of imputation technique often depends on the nature of
    the data—categorical or numerical. In addition, information in the data dictionary
    will be useful (such as the case for Pool Quality) where a missing value (“NA”)
    has a meaning, namely the absence of this feature for a particular property.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 处理缺失数据是每个数据科学家面临的挑战。忽略缺失值或处理不当可能导致分析偏差和错误结论。填补技术的选择通常取决于数据的性质——分类数据或数值数据。此外，数据字典中的信息将会有用（例如Pool
    Quality），在这些情况下，缺失值（“NA”）有其意义，即特定属性的缺失。
- en: '**Data Imputation For Categorical Features with Missing Values**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**带缺失值的分类特征的数据填补**'
- en: You can identify categorical data types and rank them in the order in which
    they are most affected by missing data.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以识别分类数据类型并按缺失数据对它们的影响程度进行排序。
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The data dictionary indicates that missing values for the entire list of categorical
    features above indicate the absence of that feature for a given property, except
    for “Electrical”. With this insight, we can impute with the “mode” for the 1 missing
    data point for the electrical system and impute all others using `"None"` (with
    quotations to make it a Python string).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 数据字典指示，类别特征缺失值的整个列表表示该特征在给定属性中缺失，除了“Electrical”外。基于这一见解，我们可以用“mode”来插补电气系统的1个缺失数据点，并用`"None"`（带引号以使其成为Python字符串）插补其他所有缺失值。
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This confirms that there are now no more missing values for categorical features:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这确认现在类别特征的缺失值已不再存在：
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Data Imputation For Numerical Features with Missing Values**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**缺失值的数值特征插补**'
- en: We can apply the same technique demonstrated above to identify numerical data
    types and rank them in the order in which they are most affected by missing data.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以应用上述演示的相同技术来识别数值数据类型，并按其受到缺失数据影响的程度进行排名。
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The above illustrates that there are fewer instances of missing numerical data
    versus missing categorical data. However, the data dictionary is not as useful
    for a straightforward imputation. Whether or not to impute missing data in data
    science largely depends on the goal of the analysis. Often, a data scientist may
    generate multiple imputations to account for the uncertainty in the imputation
    process. Common multiple imputation methods include (but are not limited to) mean,
    median, and regression imputation. As a baseline, we will illustrate how to employ
    mean imputation here, but may refer to other techniques depending on the task
    at hand.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 上述说明了与缺失类别数据相比，缺失数值数据的实例较少。然而，数据字典对于直接插补并不十分有用。在数据科学中是否插补缺失数据在很大程度上取决于分析的目标。通常，数据科学家可能会生成多个插补值，以考虑插补过程中的不确定性。常见的多重插补方法包括（但不限于）均值、
    медиан和回归插补。作为基准，我们将在这里演示如何使用均值插补，但根据任务的不同可能会参考其他技术。
- en: '[PRE12]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This prints:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印：
- en: '[PRE13]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: At times, we may also opt to leave the missing value without any imputation
    to retain the authenticity of the original dataset and remove the observations
    that do not have complete and accurate data if required. Alternatively, you may
    also try to build a machine learning model to **guess** the missing value based
    on some other data in the same rows, which is the principle behind imputation
    by regression. As a final step of the above baseline imputation, let us cross-check
    if there are any missing values.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，我们也可以选择不对缺失值进行任何插补，以保留原始数据集的真实性，并在必要时删除那些没有完整和准确数据的观察值。或者，你也可以尝试建立一个机器学习模型来**猜测**基于同一行中的其他数据的缺失值，这就是回归插补的原理。作为上述基准插补的最终步骤，让我们交叉检查是否还有缺失值。
- en: '[PRE14]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You should see:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到：
- en: '[PRE15]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Congratulations! We have successfully imputed every missing value in the Ames
    dataset using baseline operations. It’s important to note that numerous other
    techniques exist for imputing missing data. As a data scientist, exploring various
    options and determining the most appropriate method for the given context is crucial
    to producing reliable and meaningful results.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！我们已经成功地通过基准操作插补了Ames数据集中的所有缺失值。值得注意的是，还有许多其他技术可以用来插补缺失数据。作为数据科学家，探索各种选项并确定最适合给定背景的方法对生成可靠和有意义的结果至关重要。
- en: Want to Get Started With Beginner's Guide to Data Science?
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 想开始学习数据科学初学者指南吗？
- en: Take my free email crash course now (with sample code).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 立即参加我的免费电子邮件速成课程（附样例代码）。
- en: Click to sign-up and also get a free PDF Ebook version of the course.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 点击注册并获得课程的免费PDF电子书版本。
- en: '**Further****Reading**'
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**进一步阅读**'
- en: '**Resources**'
  id: totrans-63
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**资源**'
- en: '[Ames Dataset](https://raw.githubusercontent.com/Padre-Media/dataset/main/Ames.csv)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Ames 数据集](https://raw.githubusercontent.com/Padre-Media/dataset/main/Ames.csv)'
- en: '[Ames Data Dictionary (Expanded Version)](https://jse.amstat.org/v19n3/decock/DataDocumentation.txt)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Ames 数据字典（扩展版）](https://jse.amstat.org/v19n3/decock/DataDocumentation.txt)'
- en: '**Summary**'
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**总结**'
- en: In this tutorial, we explored the Ames Housing dataset through the lens of data
    science techniques. We discussed the importance of a data dictionary in understanding
    the dataset’s variables and dove into Python code snippets that help identify
    and handle these variables effectively.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们通过数据科学技术的视角探讨了Ames住房数据集。我们讨论了数据字典在理解数据集变量中的重要性，并深入研究了帮助有效识别和处理这些变量的Python代码片段。
- en: Understanding the nature of the variables you’re working with is crucial for
    any data-driven decision-making process. As we’ve seen, the Ames data dictionary
    serves as a valuable guide in this respect. Coupled with Python’s powerful data
    manipulation libraries, navigating complex datasets like the Ames Housing dataset
    becomes a much more manageable task.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 了解你所处理的变量的本质对于任何数据驱动的决策过程至关重要。正如我们所见，Ames 数据字典在这方面作为一个宝贵的指南。结合 Python 强大的数据处理库，处理像
    Ames Housing 数据集这样的复杂数据集变得更加可控。
- en: 'Specifically, you learned:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，你学到了：
- en: '**The importance of a data dictionary when assessing data types and imputation
    strategies.**'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在评估数据类型和填补策略时数据字典的重要性。**'
- en: '***   **Identification and reclassification methods for numerical and categorical
    features.*****   **How to impute missing categorical and numerical features using
    the pandas library.******'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '***数值特征和类别特征的识别与重新分类方法。*****   **如何使用 pandas 库填补缺失的类别特征和数值特征。******'
- en: '******Do you have any questions? Please ask your questions in the comments
    below, and I will do my best to answer.******'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '******你有任何问题吗？请在下方评论中提出你的问题，我会尽力回答。******'
