- en: Using ChatGPT as Your Programming Assistant
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 ChatGPT 作为你的编程助手
- en: 原文：[https://machinelearningmastery.com/using-chatgpt-as-your-programming-assistant/](https://machinelearningmastery.com/using-chatgpt-as-your-programming-assistant/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://machinelearningmastery.com/using-chatgpt-as-your-programming-assistant/](https://machinelearningmastery.com/using-chatgpt-as-your-programming-assistant/)
- en: A large language model is basically a machine that can understand and generate
    text. Depends on how it is trained, sometimes the model can generate something
    other than text. ChatGPT is such a large language model. It can generate programming
    code if you prompt it correctly. In this post, you will learn how to make ChatGPT
    to generate a program for you. Specifically, you will learn
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 大型语言模型基本上是一种可以理解和生成文本的机器。根据训练方式，有时模型会生成文本之外的内容。ChatGPT 就是这样一个大型语言模型。如果你正确地提示它，它可以生成编程代码。在这篇文章中，你将学习如何让
    ChatGPT 为你生成程序。具体来说，你将学习
- en: How to make ChatGPT to bootstrap your programming project
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何让 ChatGPT 启动你的编程项目
- en: How to use ChatGPT as your programming helper
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用 ChatGPT 作为你的编程助手
- en: '**Get started and apply ChatGPT** with my book [Maximizing Productivity with
    ChatGPT](https://machinelearningmastery.com/productivity-with-chatgpt/). It provides
    **real-world use cases** and **prompt examples** designed to get you using ChatGPT
    quickly.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**开始使用并应用 ChatGPT**，请参考我的书 [Maximizing Productivity with ChatGPT](https://machinelearningmastery.com/productivity-with-chatgpt/)。它提供了**实际应用案例**和**提示示例**，旨在帮助你快速使用
    ChatGPT。'
- en: Let’s get started.![](../Images/491c72032f6cec5038964e7202550e28.png)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！[](../Images/491c72032f6cec5038964e7202550e28.png)
- en: Using ChatGPT as Your Programming Assistant
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 ChatGPT 作为你的编程助手
- en: Picture generated by the author using Stable Diffusion. Some rights reserved.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 由作者使用 Stable Diffusion 生成的图片。保留部分权利。
- en: Overview
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: 'This post is divided into two parts; they are:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本文分为两个部分，它们是：
- en: Start a Programming Project
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动编程项目
- en: Understanding Code and Generating Function Snippets
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解代码和生成函数片段
- en: Start a Programming Project
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动编程项目
- en: 'Let’s consider a simple project: You want to set up a REST API server that
    can help you take a “screen capture” of an entire web page of a provided URL.
    Optionally, the REST API can accept an additional optional parameter of an email
    address. In that case, the screen capture is not returned but emailed out.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个简单的项目：你想设置一个 REST API 服务器，可以帮助你对提供的 URL 的整个网页进行“屏幕截图”。可选地，REST API 可以接受一个额外的电子邮件地址参数。在这种情况下，屏幕截图不会返回，而是通过电子邮件发送出去。
- en: This is a project that involves multiple components. You need something that
    can act like a REST API server that listens to HTTP requests and responds accordingly.
    You also need something to fetch a URL and take a screenshot like a normal web
    browser. There is also a logic in it that depends on whether an email address
    is provided; the output can be an image file returned, or an email with an attachment
    is sent out.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个涉及多个组件的项目。你需要一些东西来充当 REST API 服务器，监听 HTTP 请求并作出响应。你还需要一些东西来获取 URL 并像普通网页浏览器一样截图。项目中还有一个逻辑，取决于是否提供了电子邮件地址；输出可以是返回的图像文件，也可以是发送附带附件的电子邮件。
- en: 'If you are unfamiliar with how to create a REST API server or don’t know the
    tools available, you can ask ChatGPT for help. Simply put down all the detail
    in your prompt and ask:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对如何创建 REST API 服务器不熟悉或不知道有哪些工具可用，你可以向 ChatGPT 请求帮助。只需将所有细节写入提示中并询问：
- en: I need to create a REST API server that accepts a URL as input, captures the
    web page screenshot into JPEG format and returns it as output. Optionally, the
    user may provide an email address as an additional input. In that case, the screenshot
    should be emailed out instead of returned. Can you help me with this program?
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我需要创建一个 REST API 服务器，该服务器接受 URL 作为输入，将网页截图捕获为 JPEG 格式并作为输出返回。可选地，用户可以提供一个电子邮件地址作为附加输入。在这种情况下，截图应通过电子邮件发送而不是返回。你能帮我完成这个程序吗？
- en: 'With this, ChatGPT produces the following suggestion:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对此，ChatGPT 提出了以下建议：
- en: 'Certainly! I can help you with that. To create a REST API server that captures
    web page screenshots and handles optional email functionality, you can use Node.js
    along with a few additional packages. Here’s an outline of the steps you can follow:'
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当然！我可以帮助你。要创建一个 REST API 服务器，该服务器可以捕获网页截图并处理可选的电子邮件功能，你可以使用 Node.js 以及一些额外的包。以下是你可以遵循的步骤概述：
- en: ''
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '1\. Set up a new Node.js project and initialize it using npm:'
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 1\. 设置一个新的 Node.js 项目并使用 npm 初始化：
- en: ''
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '2\. Install the necessary packages. You’ll need `express` for the API server,
    `puppeteer` for capturing screenshots, and `nodemailer` for sending emails:'
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 2\. 安装必要的包。你需要`express`作为API服务器，`puppeteer`用于捕获屏幕截图，`nodemailer`用于发送电子邮件：
- en: ''
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '3\. Create an `index.js` file and set up the basic server using Express:'
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 3\. 创建一个`index.js`文件，并使用Express设置基本的服务器：
- en: ''
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '4\. Inside the `/screenshot` route, use Puppeteer to capture the web page screenshot
    and handle the response accordingly:'
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 4\. 在`/screenshot`路由中，使用Puppeteer捕获网页截图，并相应地处理响应：
- en: ''
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '5\. To handle sending emails with the screenshot attachment, add the following
    code inside the `if (email)` block:'
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 5\. 为了处理带有截图附件的电子邮件发送，在`if (email)`块中添加以下代码：
- en: ''
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Make sure to replace `'your-email-service-provider'`, `'your-email@example.com'`,
    and `'your-email-password'` with your actual email service provider’s details.
  id: totrans-31
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 确保将`'your-email-service-provider'`、`'your-email@example.com'`和`'your-email-password'`替换为你实际的电子邮件服务提供商的详细信息。
- en: ''
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '6\. Finally, start the server:'
  id: totrans-33
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 6\. 最后，启动服务器：
- en: ''
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Now, when you make a GET request to `http://localhost:3000/screenshot?url={URL}`,
    the server will capture a screenshot of the provided URL. If an email address
    is also provided as `email={EMAIL}`, the server will send the screenshot as an
    email attachment instead of returning it directly.
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 现在，当你向`http://localhost:3000/screenshot?url={URL}`发起GET请求时，服务器将捕获提供的URL的屏幕截图。如果同时提供了电子邮件地址作为`email={EMAIL}`，服务器将通过电子邮件附件发送截图，而不是直接返回。
- en: ''
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Remember to handle errors and add any necessary error checking or validation
    based on your requirements.
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 记得处理错误并根据需要添加任何必要的错误检查或验证。
- en: ''
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: That’s it! You now have a basic REST API server that captures web page screenshots
    and optionally sends them via email. Feel free to enhance it further according
    to your needs.
  id: totrans-39
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 就这样！你现在拥有一个基本的REST API服务器，它可以捕获网页截图并可选地通过电子邮件发送。根据你的需求，可以进一步完善它。
- en: This is a very detailed result that tells you how to finish this programming
    task. The response covered all the requirements, but you should notice that when
    you didn’t specify explicitly in the prompt, ChatGPT will make some design decisions
    for you, such as what programming language to use.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常详细的结果，告诉你如何完成这个编程任务。响应涵盖了所有要求，但你应该注意，当你在提示中没有明确指定时，ChatGPT会为你做出一些设计决策，例如使用什么编程语言。
- en: 'It is not easy to think for all the details at the first run, but the nature
    of ChatGPT allows you to provide follow up prompt to revise the answer, such as:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一开始考虑所有细节并不容易，但ChatGPT的特点允许你提供后续提示以修订答案，例如：
- en: For the above problem, I want to use Python and FastAPI as the web framework
    and Selenium for the web browser. Can you rewrite this?
  id: totrans-42
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对于上述问题，我想使用Python和FastAPI作为Web框架，并使用Selenium进行Web浏览器自动化。你能重写这个吗？
- en: 'The response from ChatGPT now becomes:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 现在的响应变成了：
- en: Certainly! Here’s a revised version of the solution using Python, FastAPI as
    the web framework, and Selenium for the web browser automation.
  id: totrans-44
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当然！这是使用Python、FastAPI作为Web框架和Selenium进行Web浏览器自动化的修订版解决方案。
- en: ''
  id: totrans-45
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '1\. Install the necessary packages. You’ll need `fastapi`, `uvicorn` for running
    the server, `selenium`, and `webdriver_manager` for managing the web driver:'
  id: totrans-46
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 1\. 安装必要的包。你需要`fastapi`，用于运行服务器的`uvicorn`，以及用于管理Web驱动程序的`selenium`和`webdriver_manager`：
- en: ''
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '2\. Create a new file called `main.py` and import the required modules:'
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 2\. 创建一个名为`main.py`的新文件，并导入所需的模块：
- en: ''
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '3\. Define a request model to handle the input data:'
  id: totrans-50
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 3\. 定义一个请求模型来处理输入数据：
- en: ''
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '4\. Create a route to capture the web page screenshot:'
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 4\. 创建一个路由以捕获网页截图：
- en: ''
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '5\. Start the server using Uvicorn:'
  id: totrans-54
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 5\. 使用Uvicorn启动服务器：
- en: ''
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Now, when you make a GET request to `http://localhost:8000/screenshot?url={URL}`,
    the server will capture a screenshot of the provided URL. If an email address
    is also provided as `email={EMAIL}`, you can handle sending the email with the
    screenshot attachment using the `email` field in the request.
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 现在，当你向`http://localhost:8000/screenshot?url={URL}`发起GET请求时，服务器将捕获提供的URL的屏幕截图。如果同时提供了电子邮件地址作为`email={EMAIL}`，你可以使用请求中的`email`字段处理带有截图附件的电子邮件发送。
- en: ''
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Remember to handle errors and add any necessary error checking or validation
    based on your requirements.
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 记得处理错误并根据需要添加任何必要的错误检查或验证。
- en: ''
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Note: This solution assumes you have Chrome installed on your machine. If you’re
    using a different browser, you’ll need to adjust the webdriver accordingly.'
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意：此解决方案假设你在计算机上安装了Chrome。如果你使用的是其他浏览器，你需要相应地调整Web驱动程序。
- en: ''
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: That’s it! You now have a REST API server using Python, FastAPI, and Selenium
    to capture web page screenshots and handle optional email functionality.
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 就是这样！你现在有了一个使用 Python、FastAPI 和 Selenium 的 REST API 服务器，用于捕获网页截图并处理可选的电子邮件功能。
- en: You can see that, you didn’t provide any unnecessary detail in your follow-up
    prompt except referencing to “the above problem” but ChatGPT can accurately “translated”
    the Node.js implementation into Python and using the libraries you specified.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，你在后续提示中没有提供任何多余的细节，只是提到了“上述问题”，但 ChatGPT 可以准确地将 Node.js 实现“翻译”成 Python，并使用你指定的库。
- en: It is a fantastic result, although you may still need to polish the code. One
    example is that the browser screen size is certainly affecting how a web page
    is rendered, but the size was hard-coded in the above since you didn’t specify
    that it should be adjustable in your prompt. Another potential reason to polish
    the generated code is to catch other coding style issues or add defensive measures
    against security concerns.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个很棒的结果，尽管你可能仍需打磨代码。一个例子是，浏览器屏幕大小肯定会影响网页的渲染，但由于你没有在提示中指定它应该是可调的，因此上述代码中尺寸是硬编码的。另一个需要打磨生成代码的潜在原因是捕捉其他编码风格问题或增加针对安全问题的防御措施。
- en: In summary, as in the other use case, the more detail you put in the prompt
    with sufficient clarity is the key to a useful response. In the case of a programming
    task, it is crucial to lay out the details of
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，和其他用例一样，你在提示中提供的详细信息越清晰，对于获得有用的响应就越关键。在编程任务的情况下，明确列出细节至关重要。
- en: What is the objective
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标是什么
- en: What is the input and output format
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入和输出格式是什么
- en: What are the tools the program should use
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序应该使用哪些工具
- en: What are the different situations that the program may encounter and how should
    these situations be handled
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序可能遇到的不同情况是什么，这些情况应该如何处理
- en: Understanding Code and Generating Function Snippets
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解代码和生成函数片段
- en: Sometimes, it is not a large program that you want to write but a smaller function.
    You can ask ChatGPT to generate a function for you using a prompt similar to the
    above, except you need to specify the output format, such as a function or a class.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，你想编写的不是一个大型程序，而是一个较小的函数。你可以要求 ChatGPT 使用类似于上述的提示生成一个函数，只是你需要指定输出格式，例如函数或类。
- en: 'Indeed you can also do the other way round, namely, provide a code to ChatGPT
    and ask it to explain in English. It is sometimes useful, especially to decipher
    other people’s code. Let’s consider the following example:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，你也可以反向操作，即向 ChatGPT 提供代码并请求用英语解释它。这有时很有用，特别是为了破解其他人的代码。让我们考虑以下示例：
- en: 'Please explain what the following code is doing:'
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 请解释以下代码的功能：
- en: 'This prompt is very simple: There is only one keyword, “explain”. But pay attention
    to how you provide the code to ChatGPT: The use of backticks follows the Markdown’s
    code fence syntax to quote the program. This helps identify which is your instruction
    and which is not.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这个提示非常简单：只有一个关键字，“解释”。但要注意你如何向 ChatGPT 提供代码：使用反引号遵循 Markdown 的代码块语法来引用程序。这有助于识别哪些是你的指令，哪些不是。
- en: 'While this is not a very long program, ChatGPT explained the code with great
    verbosity. It also identifies the intent at a high level, namely, it is to calculate
    the determinant of a matrix. The following is the response:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这不是一个很长的程序，但 ChatGPT 以非常详细的方式解释了代码。它还在高层次上识别了意图，即计算矩阵的行列式。以下是响应内容：
- en: The code you provided is a recursive implementation of calculating the determinant
    of a square matrix using the Laplace expansion.
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你提供的代码是一个递归实现，用于计算方阵的行列式，使用了拉普拉斯展开。
- en: ''
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Here’s a step-by-step breakdown of what the code does:'
  id: totrans-78
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 下面是代码功能的逐步分解：
- en: ''
  id: totrans-79
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'The function `det` takes two parameters: a pointer to a 2D array (`float**
    a`) representing the matrix and the size of the matrix (`float k`).'
  id: totrans-80
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 函数 `det` 接受两个参数：一个指向 2D 数组 (`float** a`) 的指针，表示矩阵，以及矩阵的大小 (`float k`)。
- en: 'It declares some variables: `s` for sign, `ret` for the determinant value,
    and `**b` as a temporary matrix.'
  id: totrans-81
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它声明了一些变量：`s` 用于符号，`ret` 用于行列式值，`**b` 作为临时矩阵。
- en: It checks if `k` is equal to 1\. If so, it means we have reached the base case
    of a 1×1 matrix, and the function returns the single value in the matrix, which
    is the determinant.
  id: totrans-82
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它检查 `k` 是否等于 1。如果是，这意味着我们已经达到了 1×1 矩阵的基本情况，函数返回矩阵中的单个值，即行列式。
- en: If `k` is greater than 1, it proceeds with the calculation.
  id: totrans-83
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 `k` 大于 1，则继续进行计算。
- en: It dynamically allocates memory for the temporary matrix `b` with size `k`x`k`.
  id: totrans-84
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它为临时矩阵`b`动态分配了大小为`k`x`k`的内存。
- en: It initializes `ret` to 0.
  id: totrans-85
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它将`ret`初始化为0。
- en: It enters a loop that iterates over each column of the first row of the matrix
    `a`.
  id: totrans-86
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它进入一个循环，遍历矩阵`a`的第一行的每一列。
- en: Inside the loop, it resets the indices `m` and `n` to 0.
  id: totrans-87
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在循环内部，它将索引`m`和`n`重置为0。
- en: It enters a nested loop that iterates over each element of the matrix `a`.
  id: totrans-88
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它进入一个嵌套循环，遍历矩阵`a`的每一个元素。
- en: Inside the nested loop, it sets the element in the temporary matrix `b` at position
    `m`,`n` to 0.
  id: totrans-89
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在嵌套循环中，它将临时矩阵`b`中位置`m`,`n`的元素设置为0。
- en: It checks if the current element is not in the first row (`i != 0`) and not
    in the current column (`j != c`).
  id: totrans-90
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它检查当前元素是否不在第一行（`i != 0`）和当前列（`j != c`）。
- en: If the element is not in the first row or the current column, it copies the
    value from matrix `a` to the temporary matrix `b` at position `m`,`n`.
  id: totrans-91
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果元素不在第一行或当前列，它将矩阵`a`中的值复制到临时矩阵`b`的位置`m`,`n`。
- en: It updates the indices `m` and `n` based on the position of the next element
    in `b`.
  id: totrans-92
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它根据`b`中下一个元素的位置更新索引`m`和`n`。
- en: After the nested loop, it calculates the determinant of the submatrix `b` by
    recursively calling the `det` function with the temporary matrix `b` and size
    `k - 1`.
  id: totrans-93
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在嵌套循环之后，它通过递归调用`det`函数，使用临时矩阵`b`和大小`k - 1`来计算子矩阵`b`的行列式。
- en: It multiplies the determinant of the submatrix by the sign `s` (alternating
    sign).
  id: totrans-94
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它将子矩阵的行列式乘以符号`s`（交替符号）。
- en: It multiplies the sign `s` by -1 to switch the sign for the next iteration.
  id: totrans-95
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它将符号`s`乘以-1，以便为下一次迭代切换符号。
- en: It adds the product of the sign, the element in the first row (`a[0][c]`), and
    the determinant of the submatrix to the running sum `ret`.
  id: totrans-96
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它将符号、第一行中的元素（`a[0][c]`）以及子矩阵的行列式的乘积加到累加和`ret`中。
- en: The loop continues to the next column.
  id: totrans-97
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 循环继续到下一列。
- en: After the loop, it frees the memory allocated for each row of the temporary
    matrix `b`.
  id: totrans-98
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 循环之后，它释放了为临时矩阵`b`的每一行分配的内存。
- en: It frees the memory allocated for the temporary matrix `b`.
  id: totrans-99
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它释放了为临时矩阵`b`分配的内存。
- en: Finally, it returns the calculated determinant value `ret`.
  id: totrans-100
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最终，它返回计算出的行列式值`ret`。
- en: ''
  id: totrans-101
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In summary, the code recursively calculates the determinant of a square matrix
    by performing a Laplace expansion along the first row. It uses a temporary matrix
    to store the submatrices obtained by excluding the first row and the selected
    column. The recursion continues until it reaches the base case of a 1×1 matrix.
  id: totrans-102
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 总之，代码通过对第一行进行拉普拉斯展开，递归地计算方阵的行列式。它使用临时矩阵存储通过排除第一行和所选列获得的子矩阵。递归继续直到达到1×1矩阵的基本情况。
- en: Follow-up to improve the code
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 后续改进代码
- en: 'This code is not easy to understand at first glance. There may be a way to
    make it easier to read. Indeed, ChatGPT can do a good job in this case, with just
    a very simple follow-up prompt:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码乍看之下不容易理解。可能有办法让它更易读。的确，ChatGPT在这种情况下能做得很好，只需一个非常简单的后续提示：
- en: Can you rewrite this code for clarity and add comments?
  id: totrans-105
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你能重写这段代码以提高清晰度并添加注释吗？
- en: 'The keywords here are “for clarity” and “add comments”. ChatGPT provides the
    following in response:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的关键字是“提高清晰度”和“添加注释”。ChatGPT在回应中提供了如下内容：
- en: 'Certainly! Here’s a revised version of the code with comments explaining each
    step:'
  id: totrans-107
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当然！这里是经过修订的代码版本，包含解释每一步的注释：
- en: ''
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I’ve added comments above each significant section of the code to explain what
    it does. This should make the code more readable and easier to understand.
  id: totrans-109
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我在代码中每个重要部分上方添加了注释，以解释其功能。这应该使代码更易读，更易理解。
- en: This version is undoubtedly easier to read.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这个版本无疑更易读。
- en: 'Besides, you can ask for more. Such as ask to catch bugs or potential security
    issues in the code. Let’s ask ChatGPT to produce some unit test code:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还可以要求更多，比如捕捉代码中的错误或潜在安全问题。让我们请ChatGPT生成一些单元测试代码：
- en: Can you give me a few unit test cases to ensure this function works well?
  id: totrans-112
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你能给我几个单元测试用例以确保这个函数运行良好吗？
- en: 'Not require any further explanation, the following is the response:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 不需要进一步解释，以下是回应：
- en: 'Certainly! Here are a few unit test cases to verify the correctness of the
    `determinant` function:'
  id: totrans-114
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当然！以下是一些单元测试用例，以验证`determinant`函数的正确性：
- en: ''
  id: totrans-115
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Test Case 1: 2×2 Matrix'
  id: totrans-116
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 测试用例1：2×2矩阵
- en: ''
  id: totrans-117
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Test Case 2: 3×3 Matrix'
  id: totrans-118
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 测试用例2：3×3矩阵
- en: ''
  id: totrans-119
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Test Case 3: 4×4 Matrix'
  id: totrans-120
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 测试用例3：4×4矩阵
- en: ''
  id: totrans-121
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: These test cases cover matrices of different sizes (2×2, 3×3, and 4×4) and include
    positive, negative, and zero determinant values. By comparing the calculated determinant
    values with the expected outputs, you can verify if the `determinant` function
    is working correctly.
  id: totrans-122
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这些测试用例覆盖了不同大小的矩阵（2×2、3×3 和 4×4），包括正的、负的和零行列式值。通过将计算出的行列式值与预期输出进行比较，你可以验证 `determinant`
    函数是否正常工作。
- en: 'But it is quite obvious, the unit test code missed a corner case: The 1×1 matrix.
    This reveals that ChatGPT is not always perfect. You should only use it as your
    assistant not replacement. You should always verify the result.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 但很明显，单元测试代码遗漏了一个边角情况：1×1 矩阵。这表明 ChatGPT 并不总是完美的。你应该仅将其作为助手而非替代品。你应该始终验证结果。
- en: Summary
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this post, you saw how ChatGPT can help you with programming. Not only can
    it generate code as part of its response to your question, but also it can figure
    out the intention of a code that you provided. Specifically, you have learned
    that:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，你看到 ChatGPT 如何帮助你编程。它不仅可以在回应你的问题时生成代码，还能理解你提供的代码意图。具体来说，你已经了解到：
- en: You can use ChatGPT to generate the initial code for your software project,
    or generate test code for a function
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用 ChatGPT 为你的软件项目生成初始代码，或为函数生成测试代码
- en: You can ask ChatGPT to explain the code to you
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以要求 ChatGPT 解释代码给你
- en: You can make use of ChatGPT to refactor and clean up code
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以利用 ChatGPT 对代码进行重构和清理
